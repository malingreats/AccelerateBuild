{"version":3,"sources":["views/application/customer/ProductReview/ReviewEdit.js","views/application/customer/ProductReview/index.js","store/productReviewActions.js"],"names":["useStyles","makeStyles","reviewDialog","maxWidth","reviewContainer","marginTop","marginBottom","reviewState","value","label","ReviewEdit","open","handleCloseDialog","classes","React","useState","currency","setCurrency","setValue","Dialog","onClose","className","DialogTitle","DialogContent","Grid","container","spacing","gridSpacing","item","xs","TextField","id","fullWidth","defaultValue","multiline","rows","Typography","align","component","variant","Rating","name","precision","onChange","event","newValue","select","target","map","option","MenuItem","DialogActions","AnimateButton","Button","onClick","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","headCells","numeric","theme","root","width","paper","table","minWidth","sortSpan","visuallyHidden","useToolbarStyles","padding","paddingLeft","paddingRight","highlight","color","palette","secondary","main","title","flex","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","selected","TableHead","TableRow","TableCell","sx","pl","Checkbox","indeterminate","checked","inputProps","colSpan","length","headCell","disablePadding","sortDirection","TableSortLabel","active","direction","property","pr","mode","grey","EnhancedTableToolbar","Toolbar","clsx","Tooltip","IconButton","fontSize","connect","state","productReview","getProductReviews","type","actionTypes","props","rowsInitial","productReviews","useEffect","console","log","loadData","i","author","review","rating","date","status","useTheme","setOpen","handleClickOpenDialog","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","search","setSearch","setRows","handleClick","selectedIndex","indexOf","newSelected","concat","slice","emptyRows","Math","max","MainCard","content","CardContent","justifyContent","alignItems","sm","InputProps","startAdornment","InputAdornment","position","newString","newRows","filter","row","matches","containsQuery","forEach","toString","toLowerCase","includes","placeholder","size","textAlign","TableContainer","Table","newSelectedId","n","TableBody","isItemSelected","labelId","hover","role","tabIndex","scope","cursor","readOnly","Chip","style","height","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/159.e6df0590.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    MenuItem,\r\n    Rating,\r\n    TextField,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// style constant\r\nconst useStyles = makeStyles({\r\n    reviewDialog: {\r\n        '&>div:nth-child(3)': {\r\n            '&>div': {\r\n                maxWidth: '400px'\r\n            }\r\n        }\r\n    },\r\n    reviewContainer: {\r\n        marginTop: '0px',\r\n        marginBottom: '0px'\r\n    }\r\n});\r\n\r\n// review state options\r\nconst reviewState = [\r\n    {\r\n        value: '1',\r\n        label: 'Published'\r\n    },\r\n    {\r\n        value: '2',\r\n        label: 'Pending'\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'confirm'\r\n    }\r\n];\r\n\r\nconst ReviewEdit = ({ open, handleCloseDialog }) => {\r\n    const classes = useStyles();\r\n\r\n    // handle review status change\r\n    const [currency, setCurrency] = React.useState('1');\r\n    const handleSelectChange = (event) => {\r\n        setCurrency(event.target.value);\r\n    };\r\n\r\n    // handle star rating\r\n    const [value, setValue] = React.useState(2);\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onClose={handleCloseDialog} className={classes.reviewDialog}>\r\n                <DialogTitle>Edit Review</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container spacing={gridSpacing} className={classes.reviewContainer}>\r\n                        <Grid item xs={12}>\r\n                            <TextField id=\"outlined-basic-review-product\" fullWidth label=\"Product \" defaultValue=\"Apple Watch Series 4\" />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField id=\"outlined-basic-review-author\" fullWidth label=\"Author \" defaultValue=\"Joseph William\" />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"outlined-basic-review\"\r\n                                fullWidth\r\n                                multiline\r\n                                rows={4}\r\n                                label=\"Text of review\"\r\n                                defaultValue=\"If you're coming from a Series 3, the choice is more difficult. The Series 4 is undoubtedly the better device. And if you care about fall detection, the ECG app, or a larger screen then upgrading makes sense. But I think most people will remain satisfied with their Series 3s.\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography align=\"left\" component=\"div\" variant=\"body2\">\r\n                                Rating\r\n                            </Typography>\r\n                            <Rating\r\n                                name=\"simple-controlled\"\r\n                                value={value}\r\n                                precision={0.5}\r\n                                onChange={(event, newValue) => {\r\n                                    setValue(newValue);\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"standard-select-currency\"\r\n                                select\r\n                                label=\"Status\"\r\n                                value={currency}\r\n                                fullWidth\r\n                                onChange={handleSelectChange}\r\n                            >\r\n                                {reviewState.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <AnimateButton>\r\n                        <Button variant=\"contained\">Create</Button>\r\n                    </AnimateButton>\r\n                    <Button variant=\"text\" onClick={handleCloseDialog}>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nReviewEdit.propTypes = {\r\n    open: PropTypes.bool,\r\n    handleCloseDialog: PropTypes.func\r\n};\r\n\r\nexport default ReviewEdit;\r\n","import PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\n\r\n//additions\r\nimport { connect } from 'react-redux'\r\nimport { getProductReviews } from '../../../../store/productReviewActions'\r\n//import propTypes from 'prop-types'\r\nimport { useEffect} from 'react'\r\n\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport {\r\n    CardContent,\r\n    Checkbox,\r\n    Chip,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    Rating,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TableSortLabel,\r\n    TextField,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport { visuallyHidden } from '@material-ui/utils';\r\n\r\n// third-party\r\nimport clsx from 'clsx';\r\n\r\n// project imports\r\nimport ReviewEdit from './ReviewEdit';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterListTwoTone';\r\nimport PrintIcon from '@material-ui/icons/PrintTwoTone';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyTwoTone';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport VisibilityTwoToneIcon from '@material-ui/icons/VisibilityTwoTone';\r\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\r\n\r\n// table data\r\nfunction createData(name, author, review, rating, date, status) {\r\n    return { name, author, review, rating, date, status };\r\n}\r\n\r\n/* const rowsInitial = [\r\n    createData('Apple Watch Series 1', 'Joseph William', 'The Series 4 is a significant step...', 3.5, '12.07.2018', 1),\r\n    createData('Apple X2 2', 'Anshan Handgun', 'The Series 4 is a significant step...', 5.0, '12.07.2018', 2),\r\n    createData('Apple Watch Series 3', 'Larry Doe', 'The Series 4 is a significant step...', 4.5, '12.07.2018', 2),\r\n    createData('Apple Watch Series 4', 'Joseph William', 'The Series 4 is a significant step...', 3.0, '12.07.2018', 3),\r\n    createData('Apple X2 5', 'Anshan Handgun', 'The Series 4 is a significant step...', 2.0, '12.07.2018', 2),\r\n    createData('Apple X2 6', 'Larry Doe', 'The Series 4 is a significant step...', 2.5, '12.07.2018', 1),\r\n    createData('Apple Watch Series 7', 'Joseph William', 'The Series 4 is a significant step...', 4.0, '12.07.2018', 3),\r\n    createData('Apple X2 8', 'Anshan Handgun', 'The Series 4 is a significant step...', 5.0, '12.07.2018', 3),\r\n    createData('Apple Watch Series 9', 'Larry Doe', 'The Series 4 is a significant step...', 4.0, '12.07.2018', 1),\r\n    createData('Apple Watch Series 10', 'Joseph William', 'The Series 4 is a significant step...', 3.5, '12.07.2018', 2),\r\n    createData('Apple X2 11', 'Anshan Handgun', 'The Series 4 is a significant step...', 1.0, '12.07.2018', 1),\r\n    createData('Apple X2 12', 'Larry Doe', 'The Series 4 is a significant step...', 1.5, '12.07.2018', 1),\r\n    createData('Apple Watch Series 13', 'Joseph William', 'The Series 4 is a significant step...', 2.5, '12.07.2018', 3),\r\n    createData('Apple X2 14', 'Anshan Handgun', 'The Series 4 is a significant step...', 5.0, '12.07.2018', 1),\r\n    createData('Apple Watch Series 15', 'Larry Doe', 'The Series 4 is a significant step...', 4.0, '12.07.2018', 2)\r\n]; */\r\n\r\n// table sort\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// table header options\r\nconst headCells = [\r\n    {\r\n        id: 'name',\r\n        numeric: false,\r\n        label: 'Product Name',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'author',\r\n        numeric: true,\r\n        label: 'Author',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'review',\r\n        numeric: true,\r\n        label: 'Review',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'rating',\r\n        numeric: true,\r\n        label: 'Rating',\r\n        align: 'center'\r\n    },\r\n    {\r\n        id: 'date',\r\n        numeric: true,\r\n        label: 'Date',\r\n        align: 'center'\r\n    },\r\n    {\r\n        id: 'status',\r\n        numeric: false,\r\n        label: 'Status',\r\n        align: 'center'\r\n    }\r\n];\r\n\r\n// style const\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    table: {\r\n        minWidth: 750\r\n    },\r\n    sortSpan: visuallyHidden\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 0,\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1)\r\n    },\r\n    highlight: {\r\n        color: theme.palette.secondary.main\r\n    },\r\n    title: {\r\n        flex: '1 1 100%'\r\n    }\r\n}));\r\n\r\n// ===========================|| TABLE HEADER ||=========================== //\r\n\r\nfunction EnhancedTableHead({ classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, theme, selected }) {\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts'\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                {numSelected > 0 && (\r\n                    <TableCell padding=\"none\" colSpan={7}>\r\n                        <EnhancedTableToolbar numSelected={selected.length} />\r\n                    </TableCell>\r\n                )}\r\n                {numSelected <= 0 &&\r\n                    headCells.map((headCell) => (\r\n                        <TableCell\r\n                            key={headCell.id}\r\n                            align={headCell.align}\r\n                            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                            sortDirection={orderBy === headCell.id ? order : false}\r\n                        >\r\n                            <TableSortLabel\r\n                                active={orderBy === headCell.id}\r\n                                direction={orderBy === headCell.id ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell.id)}\r\n                            >\r\n                                {headCell.label}\r\n                                {orderBy === headCell.id ? (\r\n                                    <span className={classes.sortSpan}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                    ))}\r\n                {numSelected <= 0 && (\r\n                    <TableCell sortDirection={false} align=\"center\" sx={{ pr: 3 }}>\r\n                        <Typography\r\n                            variant=\"subtitle1\"\r\n                            sx={{ color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : 'grey.900' }}\r\n                        >\r\n                            Action\r\n                        </Typography>\r\n                    </TableCell>\r\n                )}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    theme: PropTypes.object,\r\n    selected: PropTypes.array,\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired\r\n};\r\n\r\n// ===========================|| TABLE HEADER TOOLBAR ||=========================== //\r\n\r\nconst EnhancedTableToolbar = ({ numSelected }) => {\r\n    const classes = useToolbarStyles();\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"h4\" component=\"div\">\r\n                    {numSelected} Selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    Nutrition\r\n                </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 && (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton>\r\n                        <DeleteIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired\r\n};\r\n\r\n// ===========================|| PRODUCT REVIEW LIST ||=========================== //\r\n\r\nconst ProductReview = ({productReview, props, getProductReviews}) => {\r\n\r\n    // additions\r\n    let rowsInitial = []   \r\n    const {productReviews} = productReview\r\n\r\n    useEffect(() => {\r\n        getProductReviews() \r\n        console.log('productReviews Array Down')\r\n        console.log(productReviews)\r\n        loadData()\r\n    }, []);\r\n\r\n    const loadData = () => {\r\n        for (let i = 0; i < productReviews.length; i++) {\r\n            rowsInitial[i] = createData(productReviews[i].name, productReviews[i].author, productReviews[i].review, productReviews[i].rating, productReviews[i].date, productReviews[i].status)\r\n            console.log(productReviews[i].name)\r\n        } \r\n\r\n    }\r\n    \r\n   \r\n\r\n    \r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    // open dialog to edit review\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpenDialog = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleCloseDialog = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [search, setSearch] = React.useState('');\r\n    const [rows, setRows] = React.useState(rowsInitial);\r\n\r\n    const handleSearch = (event) => {\r\n        const newString = event.target.value;\r\n        setSearch(newString);\r\n\r\n        if (newString) {\r\n            const newRows = rows.filter((row) => {\r\n                let matches = true;\r\n\r\n                const properties = ['name', 'author', 'review'];\r\n                let containsQuery = false;\r\n\r\n                properties.forEach((property) => {\r\n                    if (row[property].toString().toLowerCase().includes(newString.toString().toLowerCase())) {\r\n                        containsQuery = true;\r\n                    }\r\n                });\r\n\r\n                if (!containsQuery) {\r\n                    matches = false;\r\n                }\r\n                return matches;\r\n            });\r\n            setRows(newRows);\r\n        } else {\r\n            setRows(rowsInitial);\r\n        }\r\n    };\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelectedId = rows.map((n) => n.name);\r\n            setSelected(newSelectedId);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    return (\r\n        <MainCard title=\"Product Review\" content={false}>\r\n            <CardContent>\r\n                <Grid container justifyContent=\"space-between\" alignItems=\"center\" spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon fontSize=\"small\" />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                            onChange={handleSearch}\r\n                            placeholder=\"Search Product\"\r\n                            value={search}\r\n                            size=\"small\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\r\n                        <Tooltip title=\"Copy\">\r\n                            <IconButton>\r\n                                <FileCopyIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Print\">\r\n                            <IconButton>\r\n                                <PrintIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Filter\">\r\n                            <IconButton>\r\n                                <FilterListIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n\r\n            {/* table */}\r\n            <TableContainer>\r\n                <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n                    <EnhancedTableHead\r\n                        classes={classes}\r\n                        numSelected={selected.length}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onSelectAllClick={handleSelectAllClick}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={rows.length}\r\n                        theme={theme}\r\n                        selected={selected}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((row, index) => {\r\n                                const isItemSelected = isSelected(row.name);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return (\r\n                                    <TableRow\r\n                                        hover\r\n                                        role=\"checkbox\"\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={index}\r\n                                        selected={isItemSelected}\r\n                                    >\r\n                                        <TableCell padding=\"checkbox\" onClick={(event) => handleClick(event, row.name)} sx={{ pl: 3 }}>\r\n                                            <Checkbox\r\n                                                color=\"primary\"\r\n                                                checked={isItemSelected}\r\n                                                inputProps={{\r\n                                                    'aria-labelledby': labelId\r\n                                                }}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={labelId}\r\n                                            scope=\"row\"\r\n                                            onClick={(event) => handleClick(event, row.name)}\r\n                                            sx={{ cursor: 'pointer' }}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"body2\"\r\n                                                sx={{ color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : 'grey.900' }}\r\n                                            >\r\n                                                {' '}\r\n                                                {row.name}{' '}\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell>{row.author}</TableCell>\r\n                                        <TableCell>{row.review}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Rating name=\"read-only\" value={row.rating} precision={0.5} readOnly />\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{row.date}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {row.status === 1 && <Chip label=\"Complete\" color=\"success\" size=\"small\" />}\r\n                                            {row.status === 2 && <Chip label=\"Processing\" color=\"warning\" size=\"small\" />}\r\n                                            {row.status === 3 && <Chip label=\"Confirm\" color=\"primary\" size=\"small\" />}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                                            <IconButton color=\"primary\">\r\n                                                <VisibilityTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                                            </IconButton>\r\n                                            <IconButton color=\"secondary\" onClick={handleClickOpenDialog}>\r\n                                                <EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        {emptyRows > 0 && (\r\n                            <TableRow\r\n                                style={{\r\n                                    height: 53 * emptyRows\r\n                                }}\r\n                            >\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                {/* review edit dialog */}\r\n                <ReviewEdit open={open} handleCloseDialog={handleCloseDialog} />\r\n            </TableContainer>\r\n\r\n            {/* table pagination */}\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\n\r\nProductReview.propTypes = {\r\n    productReview: PropTypes.object.isRequired,\r\n    getProductReviews: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        productReview: state.productReview\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getProductReviews})(ProductReview);\r\n","import * as actionTypes from './actions';\r\n\r\nexport const getProductReviews = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.GET_PRODUCT_REVIEW\r\n\t};\r\n};"],"sourceRoot":""}