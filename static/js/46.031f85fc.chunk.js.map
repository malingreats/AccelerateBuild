{"version":3,"sources":["assets/images/auth/auth-signup-blue-card.svg","assets/images/auth/auth-signup-white-card.svg","views/pages/authentication/firebase-forms/FirebaseCustomerRegister.js","views/pages/authentication/authentication1/Register1.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","ui-component/cards/AuthSlider.js","hooks/useScriptRef.js","../node_modules/@material-ui/styles/styled/styled.js","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/icons/VisibilityOff.js","assets/images/auth/auth-pattern.svg","assets/images/auth/auth-pattern-dark.svg","ui-component/cards/BackgroundPattern1.js","assets/images/ring-loader.svg","utils/password-strength.js","assets/images/icons/social-google.svg"],"names":["useStyles","makeStyles","theme","redButton","fontSize","fontWeight","backgroundColor","palette","mode","dark","main","grey","border","borderColor","light","color","textTransform","primary","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","loginIcon","marginRight","loginInput","typography","customInput","FirebaseCustomerRegister","others","useAuth","registerCustomer","isLoading","classes","useScriptRef","useMediaQuery","useSelector","state","customization","React","useState","showPassword","setShowPassword","setStrength","setLevel","handleClickShowPassword","firebaseEmailPasswordSignIn","firebaseGoogleSignIn","handleMouseDownPassword","event","preventDefault","useEffect","value","temp","strengthIndicator","strengthColor","changePassword","Grid","container","direction","justifyContent","item","xs","Box","sx","alignItems","display","Divider","className","orientation","mb","Typography","variant","validationSchema","Yup","shape","email","max","required","password","errors","handleBlur","isSubmitting","handleChange","handleSubmit","touched","values","noValidate","onSubmit","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","id","type","name","onBlur","inputProps","notchedOutline","error","Boolean","label","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","mt","AnimateButton","Button","disabled","size","src","loader","alt","style","height","width","authPurpleCard","content","top","left","backgroundSize","backgroundImage","AuthWhiteCard","backgroundRepeat","backgroundPosition","animation","AuthBlueCard","animationDelay","items","title","description","Register","useTheme","matchDownSM","AuthWrapper1","minHeight","md","lg","my","AuthCardWrapper","Stack","textAlign","secondary","gutterBottom","sm","to","Logo","component","RouterLink","textDecoration","alignSelf","BackgroundPattern1","pb","AuthSlider","card","maxWidth","flexBasis","children","other","contentClass","styled","background","default","autoplay","arrows","dots","infinite","speed","slidesToShow","slidesToScroll","map","i","scripted","useRef","current","_excluded","_excluded2","omit","input","fields","output","Object","keys","forEach","prop","indexOf","Component","options","stylesOptions","_objectWithoutPropertiesLoose","filterProps","classNamePrefix","stylesOrCreator","root","props","_extends","displayName","propTypes","StyledComponent","ref","classNameProp","clone","ComponentProp","clsx","spread","FinalComponent","_jsx","hoistNonReactStatics","_interopRequireDefault","require","defineProperty","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","bgcolor","AuthPatternDark","AuthPattern","overflow","m","right","bottom","opacity","count","errorMain","warningDark","orangeMain","successMain","successDark","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed"],"mappings":"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","file":"static/js/46.031f85fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/auth-signup-blue-card.45946183.svg\";","export default __webpack_public_path__ + \"static/media/auth-signup-white-card.d2f5c092.svg\";","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@material-ui/core';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport loader from 'assets/images/ring-loader.svg';\r\n\r\n\r\n// project imports\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport Google from 'assets/images/icons/social-google.svg';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor:\r\n            theme.palette.mode === 'dark' ? `${theme.palette.dark.light + 20} !important` : `${theme.palette.grey[100]} !important`,\r\n        color: `${theme.palette.grey[900]} !important`,\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n// ===========================|| FIREBASE - REGISTER ||=========================== //\r\n\r\nconst FirebaseCustomerRegister = ({ ...others }) => {\r\n\r\n    const { registerCustomer, isLoading } = useAuth(); \r\n\r\n\r\n    const classes = useStyles();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n    const customization = useSelector((state) => state.customization);\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const [strength, setStrength] = React.useState(0);\r\n    const [level, setLevel] = React.useState('');\r\n\r\n    const { firebaseEmailPasswordSignIn, firebaseGoogleSignIn } = useAuth();\r\n\r\n    const googleHandler = async () => {\r\n        try {\r\n            await firebaseGoogleSignIn();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                {/* <Grid item xs={12}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            disableElevation\r\n                            fullWidth\r\n                            className={classes.redButton}\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            <img src={Google} alt=\"google\" width=\"20px\" sx={{ mr: { xs: 1, sm: 2 } }} className={classes.loginIcon} /> Sign\r\n                            up with Google\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </Grid> */}\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex'\r\n                        }}\r\n                    >\r\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\r\n                        {/* <AnimateButton>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                className={classes.signText}\r\n                                sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n                                disableRipple\r\n                                disabled\r\n                            >\r\n                                OR\r\n                            </Button>\r\n                        </AnimateButton>\r\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" /> */}\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box\r\n                        sx={{\r\n                            mb: 2\r\n                        }}\r\n                    >\r\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                /* initialValues={{\r\n                    email: 'info@codedthemes.com',\r\n                    password: '123456',\r\n                    submit: null\r\n                }} */\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                /* onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        await firebaseEmailPasswordSignIn(values.email, values.password);\r\n\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }} */\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={registerCustomer} {...others}>\r\n                        {/* <Grid container spacing={matchDownSM ? 0 : 2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Full Name\"\r\n                                    margin=\"normal\"\r\n                                    /* name=\"fname\" \r\n                                    name=\"full_name\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"Joseph\"\r\n                                    className={classes.loginInput}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"User Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"username\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"Doe\"\r\n                                    className={classes.loginInput}\r\n                                />\r\n                            </Grid>\r\n                        </Grid> */}\r\n\r\n\r\n                        <FormControl fullWidth  className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-register\"\r\n                                type=\"text\"\r\n                                /* value={values.email} */\r\n                                name=\"username\"\r\n                                onBlur={handleBlur}\r\n                                /* onChange={handleChange} */\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </FormControl>\r\n\r\n\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-register\"\r\n                                type=\"email\"\r\n                                /* value={values.email} */\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                /* onChange={handleChange} */\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {/* {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {' '}\r\n                                    {errors.email}{' '}\r\n                                </FormHelperText>\r\n                            )} */}\r\n                        </FormControl>\r\n\r\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                /* value={values.password} */\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                onBlur={handleBlur}\r\n                                /* onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }} */\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {/* {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {' '}\r\n                                    {errors.password}{' '}\r\n                                </FormHelperText>\r\n                            )} */}\r\n                        </FormControl>\r\n\r\n                        {/* {strength !== 0 && (\r\n                            <FormControl fullWidth>\r\n                                <Box\r\n                                    sx={{\r\n                                        mb: 2\r\n                                    }}\r\n                                >\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Box\r\n                                                backgroundColor={level.color}\r\n                                                sx={{\r\n                                                    width: 85,\r\n                                                    height: 8,\r\n                                                    borderRadius: '7px'\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                                {level.label}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </FormControl>\r\n                        )} */}\r\n\r\n\r\n\r\n                         <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                /* value={values.password} */\r\n                                name=\"password2\"\r\n                                label=\"Repeat Password\"\r\n                                onBlur={handleBlur}\r\n                                /* onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }} */\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {/* {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {' '}\r\n                                    {errors.password}{' '}\r\n                                </FormHelperText>\r\n                            )} */}\r\n                        </FormControl>\r\n\r\n\r\n\r\n                        {/* <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"checked\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Agree with &nbsp;\r\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                Terms & Condition.\r\n                                            </Typography>\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n\r\n\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"vendor\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Vendor\r\n                                            {/* <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                Terms & Condition.\r\n                                            </Typography> \r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n\r\n\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"customer\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Customer\r\n                                            {/* <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                Terms & Condition.\r\n                                            </Typography> \r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )} */}\r\n\r\n\r\n\r\n                        <Box\r\n                            sx={{\r\n                                mt: 2\r\n                            }}\r\n                        >\r\n                        <AnimateButton>\r\n                            {isLoading ? <Button color=\"secondary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">Signing Up   <img src={loader} alt=\"\" style={{height: '40px', width: '40px'}}/> </Button>:<Button color=\"secondary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">\r\n                                Sign Up\r\n                            </Button>} \r\n                        </AnimateButton> \r\n                        </Box>                    \r\n                        </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseCustomerRegister;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport FirebaseCustomerRegister from '../firebase-forms/FirebaseCustomerRegister';\r\nimport BackgroundPattern1 from 'ui-component/cards/BackgroundPattern1';\r\nimport AuthSlider from 'ui-component/cards/AuthSlider';\r\n\r\n// assets\r\nimport AuthBlueCard from 'assets/images/auth/auth-signup-blue-card.svg';\r\nimport AuthWhiteCard from 'assets/images/auth/auth-signup-white-card.svg';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    authPurpleCard: {\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            top: '45%',\r\n            left: '35%',\r\n            width: '260px',\r\n            backgroundSize: '380px',\r\n            height: '290px',\r\n            backgroundImage: `url(${AuthWhiteCard})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center',\r\n            animation: '15s wings ease-in-out infinite',\r\n            [theme.breakpoints.down('lg')]: {\r\n                left: '25%',\r\n                top: '50%'\r\n            }\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            top: '12%',\r\n            left: '25%',\r\n            width: '360px',\r\n            height: '350px',\r\n            backgroundSize: '460px',\r\n            backgroundImage: `url(${AuthBlueCard})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center',\r\n            animation: '15s wings ease-in-out infinite',\r\n            animationDelay: '1s',\r\n            [theme.breakpoints.down('lg')]: {\r\n                top: '10%',\r\n                left: '15%'\r\n            }\r\n        }\r\n    }\r\n}));\r\n\r\n// carousel items\r\nconst items = [\r\n    {\r\n        title: 'The Good Shop',\r\n        description: 'Powerful and easy to use shop'\r\n    },\r\n    {\r\n        title: 'Leave No One Behind',\r\n        description: ''\r\n    },\r\n    /* {\r\n        title: 'Components Based Design System',\r\n        description: 'Powerful and easy to use multipurpose theme'\r\n    }*/\r\n]; \r\n\r\n\r\n// ===============================|| AUTH1 - REGISTER ||=============================== //\r\n\r\nconst Register = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item container justifyContent=\"center\" md={6} lg={7} sx={{ my: 3 }}>\r\n                    <AuthCardWrapper>\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <Grid\r\n                                    container\r\n                                    direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                    alignItems={matchDownSM && 'center'}\r\n                                    justifyContent={matchDownSM ? 'center' : 'space-between'}\r\n                                >\r\n                                    <Grid item>\r\n                                        <Stack\r\n                                            justifyContent={matchDownSM ? 'center' : 'flex-start'}\r\n                                            textAlign={matchDownSM ? 'center' : ''}\r\n                                        >\r\n                                            <Typography\r\n                                                color={theme.palette.secondary.main}\r\n                                                gutterBottom\r\n                                                variant={matchDownSM ? 'h3' : 'h2'}\r\n                                            >\r\n                                                Customer Sign up\r\n                                            </Typography>\r\n                                            <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\r\n                                                Enter credentials to continue\r\n                                            </Typography>\r\n                                        </Stack>\r\n                                    </Grid>\r\n                                    <Grid item sx={{ mb: { xs: 3, sm: 0 } }}>\r\n                                        <RouterLink to=\"#\">\r\n                                            <Logo />\r\n                                        </RouterLink>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FirebaseCustomerRegister />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid item container direction=\"column\" alignItems=\"flex-end\" xs={12}>\r\n                                    <Typography\r\n                                        component={RouterLink}\r\n                                        to=\"/pages/login/login1\"\r\n                                        variant=\"subtitle1\"\r\n                                        sx={{ textDecoration: 'none' }}\r\n                                    >\r\n                                        Have an account?\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AuthCardWrapper>\r\n                </Grid>\r\n                <Grid item md={6} lg={5} sx={{ position: 'relative', alignSelf: 'stretch', display: { xs: 'none', md: 'block' } }}>\r\n                    <BackgroundPattern1>\r\n                        <Grid item container alignItems=\"flex-end\" justifyContent=\"center\" spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <span />\r\n                                <span className={classes.authPurpleCard} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid item container justifyContent=\"center\" sx={{ pb: 8 }}>\r\n                                    <Grid item xs={10} lg={8} sx={{ '& .slick-list': { pb: 2 } }}>\r\n                                        <AuthSlider items={items} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </BackgroundPattern1>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: '475px',\r\n        '& > *': {\r\n            flexGrow: 1,\r\n            flexBasis: '50%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px'\r\n        },\r\n        [theme.breakpoints.down('lg')]: {\r\n            maxWidth: '400px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: `${theme.spacing(5)} !important`,\r\n        [theme.breakpoints.down('lg')]: {\r\n            padding: `${theme.spacing(3)} !important`\r\n        }\r\n    }\r\n}));\r\n\r\n// ===========================|| AUTHENTICATION CARD WRAPPER ||=========================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n            {children}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@material-ui/styles';\r\n\r\n// ===========================|| AUTHENTICATION 1 WRAPPER ||=========================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\n// third-party\r\nimport Slider from 'react-slick';\r\n\r\nconst AuthSlider = ({ items }) => {\r\n    const settings = {\r\n        autoplay: true,\r\n        arrows: false,\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n        <Slider {...settings}>\r\n            {items.map((item, i) => (\r\n                <Grid key={i} container direction=\"column\" alignItems=\"center\" spacing={3} textAlign=\"center\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h1\">{item.title}</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"subtitle2\">{item.description}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            ))}\r\n        </Slider>\r\n    );\r\n};\r\n\r\nAuthSlider.propTypes = {\r\n    items: PropTypes.array.isRequired\r\n};\r\n\r\nexport default AuthSlider;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ===========================|| ELEMENT REFERENCE HOOKS  ||=========================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"name\"],\n      _excluded2 = [\"children\", \"className\", \"clone\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from '../makeStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction omit(input, fields) {\n  const output = {};\n  Object.keys(input).forEach(prop => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nexport default function styled(Component) {\n  const componentCreator = (style, options = {}) => {\n    const {\n      name\n    } = options,\n          stylesOptions = _objectWithoutPropertiesLoose(options, _excluded);\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    let classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        const displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    const stylesOrCreator = typeof style === 'function' ? theme => ({\n      root: props => style(_extends({\n        theme\n      }, props))\n    }) : {\n      root: style\n    };\n    const useStyles = makeStyles(stylesOrCreator, _extends({\n      Component,\n      name: name || Component.displayName,\n      classNamePrefix\n    }, stylesOptions));\n    let filterProps;\n    let propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n    /* eslint-disable react/forbid-foreign-prop-types */\n\n\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n\n    const StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\n      const {\n        children,\n        className: classNameProp,\n        clone,\n        component: ComponentProp\n      } = props,\n            other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n      const classes = useStyles(props);\n      const className = clsx(classes.root, classNameProp);\n      let spread = other;\n\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return /*#__PURE__*/React.cloneElement(children, _extends({\n          className: clsx(children.props.className, className)\n        }, spread));\n      }\n\n      if (typeof children === 'function') {\n        return children(_extends({\n          className\n        }, spread));\n      }\n\n      const FinalComponent = ComponentProp || Component;\n      return /*#__PURE__*/_jsx(FinalComponent, _extends({\n        ref: ref,\n        className: className\n      }, spread, {\n        children: children\n      }));\n    });\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = _extends({\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, props => {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n\n        return null;\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes\n      /* @typescript-to-proptypes-ignore */\n      .elementType\n    }, propTypes) : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = `Styled(${classNamePrefix})`;\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","export default __webpack_public_path__ + \"static/media/auth-pattern.d80b0e94.svg\";","export default __webpack_public_path__ + \"static/media/auth-pattern-dark.df61463d.svg\";","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { Box } from '@material-ui/core';\r\n\r\n// assets\r\nimport AuthPattern from 'assets/images/auth/auth-pattern.svg';\r\nimport AuthPatternDark from 'assets/images/auth/auth-pattern-dark.svg';\r\n\r\n// ===========================|| BACKGROUND GRID PATTERN 1 ||=========================== //\r\n\r\nconst BackgroundPattern1 = ({ children }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{\r\n                display: 'flex',\r\n                minHeight: '100vh',\r\n                bgcolor: theme.palette.mode === 'dark' ? theme.palette.dark.dark : '#fff',\r\n                backgroundImage: theme.palette.mode === 'dark' ? `url(${AuthPatternDark})` : `url(${AuthPattern})`,\r\n                position: 'absolute',\r\n                backgroundPosition: '0 0',\r\n                overflow: 'hidden',\r\n                m: '0 0 0 auto',\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                opacity: theme.palette.mode === 'dark' ? 0.85 : 0.9\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    );\r\n};\r\n\r\nBackgroundPattern1.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default BackgroundPattern1;\r\n","export default __webpack_public_path__ + \"static/media/ring-loader.c2459cc9.svg\";","/**\r\n * Password validator for login pages\r\n */\r\n\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\r\n\r\n// has special chars\r\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n    return false;\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (number) => {\r\n    let strengths = 0;\r\n    if (number.length > 5) strengths += 1;\r\n    if (number.length > 7) strengths += 1;\r\n    if (hasNumber(number)) strengths += 1;\r\n    if (hasSpecial(number)) strengths += 1;\r\n    if (hasMixed(number)) strengths += 1;\r\n    return strengths;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/social-google.a57081bd.svg\";"],"sourceRoot":""}