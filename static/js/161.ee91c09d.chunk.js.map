{"version":3,"sources":["views/forms/tables/TableData.js"],"names":["createData","name","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","useStyles","makeStyles","theme","root","width","height","paper","marginBottom","spacing","table","minWidth","sortSpan","visuallyHidden","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","padding","sx","pl","color","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","active","direction","onClick","property","event","className","useToolbarStyles","paddingLeft","paddingRight","highlight","backgroundColor","alpha","palette","primary","main","action","activatedOpacity","title","flex","EnhancedTableToolbar","variant","component","EnhancedTable","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","max","length","content","secondary","link","size","target","newSelectedId","n","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","scope","pr","style","colSpan","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value"],"mappings":"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","file":"static/js/161.ee91c09d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    alpha,\r\n    Checkbox,\r\n    IconButton,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableSortLabel,\r\n    TableRow,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport { visuallyHidden } from '@material-ui/utils';\r\n\r\n// assets\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\n\r\n// project imports\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n// table data\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return {\r\n        name,\r\n        calories,\r\n        fat,\r\n        carbs,\r\n        protein\r\n    };\r\n}\r\n\r\nconst rows = [\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Donut', 452, 25.0, 51, 4.9),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n    createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n    createData('KitKat', 518, 26.0, 65, 7.0),\r\n    createData('Lollipop', 392, 0.2, 98, 0.0),\r\n    createData('Marshmallow', 318, 0, 81, 2.0),\r\n    createData('Nougat', 360, 19.0, 9, 37.0),\r\n    createData('Oreo', 437, 18.0, 63, 4.0)\r\n];\r\n\r\n// table filter\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// table header\r\nconst headCells = [\r\n    {\r\n        id: 'name',\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: 'Dessert (100g serving)'\r\n    },\r\n    {\r\n        id: 'calories',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Calories'\r\n    },\r\n    {\r\n        id: 'fat',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Fat (g)'\r\n    },\r\n    {\r\n        id: 'carbs',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Carbs (g)'\r\n    },\r\n    {\r\n        id: 'protein',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Protein (g)'\r\n    }\r\n];\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: 400\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    table: {\r\n        minWidth: 750\r\n    },\r\n    sortSpan: visuallyHidden\r\n}));\r\n\r\n// ===========================|| TABLE - HEADER ||=========================== //\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts'\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.sortSpan}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1)\r\n    },\r\n    highlight: {\r\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\r\n    },\r\n    title: {\r\n        flex: '1 1 100%'\r\n    }\r\n}));\r\n\r\n// ===========================|| TABLE - HEADER TOOLBAR ||=========================== //\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n        <Toolbar className={classes.root}>\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    Nutrition\r\n                </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (\r\n                <Tooltip title=\"Filter list\">\r\n                    <IconButton>\r\n                        <FilterListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired\r\n};\r\n\r\n// ===========================|| TABLE - DATA TABLE ||=========================== //\r\n\r\nexport default function EnhancedTable() {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelectedId = rows.map((n) => n.name);\r\n            setSelected(newSelectedId);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    return (\r\n        <MainCard\r\n            content={false}\r\n            title=\"Data Tables\"\r\n            secondary={<SecondaryAction link=\"https://next.material-ui.com/components/tables/\" />}\r\n        >\r\n            <Paper className={classes.paper}>\r\n                <EnhancedTableToolbar numSelected={selected.length} />\r\n\r\n                {/* table */}\r\n                <TableContainer>\r\n                    <Table className={classes.table} aria-labelledby=\"tableTitle\" size={dense ? 'small' : 'medium'}>\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.name)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.name}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{\r\n                                                        'aria-labelledby': labelId\r\n                                                    }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                {row.name}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.calories}</TableCell>\r\n                                            <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                            <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                                            <TableCell sx={{ pr: 3 }} align=\"right\">\r\n                                                {row.protein}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow\r\n                                    style={{\r\n                                        height: (dense ? 33 : 53) * emptyRows\r\n                                    }}\r\n                                >\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                {/* table data */}\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </MainCard>\r\n    );\r\n}\r\n"],"sourceRoot":""}