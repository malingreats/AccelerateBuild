{"version":3,"sources":["views/forms/tables/TableBasic.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js"],"names":["useStyles","makeStyles","table","minWidth","createData","name","calories","fat","carbs","protein","rows","TableBasic","classes","container","spacing","gridSpacing","item","xs","content","title","secondary","link","className","sx","pl","align","pr","map","row","hover","component","scope","theme","primaryBackground","background","palette","primary","main","color","paper","secondaryBackground","errorBackground","error","warningBackground","warning","dark","infoBackground","info","successBackground","success","darkBackground","light","greyBackground","grey","primaryOutline","border","secondaryOutline","errorOutline","warningOutline","infoOutline","successOutline","greyOutline","darkOutline","badge","width","height","sm","md","lg","xl","Avatar","outline","size","others","avatarClass","outlineColor","join","CardSecondaryAction","icon","useTheme","placement","disableRipple","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","id","transform"],"mappings":"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","file":"static/js/129.69900c3f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\n\r\n// project imports\r\n// import GridTable from './GridTable';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// style constant\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 350\r\n    }\r\n});\r\n\r\n// table data\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9)\r\n];\r\n\r\n// ===========================|| TABLE - BASIC ||=========================== //\r\n\r\nexport default function TableBasic() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <MainCard\r\n                    content={false}\r\n                    title=\"Basic Table\"\r\n                    secondary={<SecondaryAction link=\"https://next.material-ui.com/components/tables/\" />}\r\n                >\r\n                    {/* table */}\r\n                    <TableContainer>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell sx={{ pl: 3 }}>Dessert (100g serving)</TableCell>\r\n                                    <TableCell align=\"right\">Calories</TableCell>\r\n                                    <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                                    <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                                    <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                                    <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                                    <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                                    <TableCell align=\"right\" sx={{ pr: 3 }}>\r\n                                        Protein&nbsp;(g)\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow hover key={row.name}>\r\n                                        <TableCell sx={{ pl: 3 }} component=\"th\" scope=\"row\">\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{row.calories}</TableCell>\r\n                                        <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                                        <TableCell sx={{ pr: 3 }} align=\"right\">\r\n                                            {row.protein}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </MainCard>\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n                <MainCard\r\n                    content={false}\r\n                    title=\"Data Grid\"\r\n                    secondary={<SecondaryAction link=\"https://material-ui.com/components/data-grid/\" />}\r\n                >\r\n                    // table data grid \r\n            <GridTable />\r\n                </MainCard>\r\n            </Grid> */}\r\n        </Grid>\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport MuiAvatar from '@material-ui/core/Avatar';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    primaryBackground: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    secondaryBackground: {\r\n        background: theme.palette.secondary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    errorBackground: {\r\n        background: theme.palette.error.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    warningBackground: {\r\n        background: theme.palette.warning.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    infoBackground: {\r\n        background: theme.palette.info.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    successBackground: {\r\n        background: theme.palette.success.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    darkBackground: {\r\n        background: theme.palette.dark.dark,\r\n        color: theme.palette.dark.light\r\n    },\r\n    greyBackground: {\r\n        background: theme.palette.grey[500],\r\n        color: theme.palette.background.paper\r\n    },\r\n    primaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.primary.main,\r\n        border: `2px solid ${theme.palette.primary.main}`\r\n    },\r\n    secondaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.secondary.main,\r\n        border: `2px solid ${theme.palette.secondary.main}`\r\n    },\r\n    errorOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.error.main,\r\n        border: `2px solid ${theme.palette.error.main}`\r\n    },\r\n    warningOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.warning.dark,\r\n        border: `2px solid ${theme.palette.warning.dark}`\r\n    },\r\n    infoOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.info.main,\r\n        border: `2px solid ${theme.palette.info.main}`\r\n    },\r\n    successOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.success.dark,\r\n        border: `2px solid ${theme.palette.success.dark}`\r\n    },\r\n    greyOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.grey[500],\r\n        border: `2px solid ${theme.palette.grey[500]}`\r\n    },\r\n    darkOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.dark.dark,\r\n        border: `2px solid ${theme.palette.dark.dark}`\r\n    },\r\n    badge: {\r\n        width: theme.spacing(3.5),\r\n        height: theme.spacing(3.5)\r\n    },\r\n    xs: {\r\n        width: theme.spacing(4.25),\r\n        height: theme.spacing(4.25)\r\n    },\r\n    sm: {\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5)\r\n    },\r\n    md: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7)\r\n    },\r\n    lg: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9)\r\n    },\r\n    xl: {\r\n        width: theme.spacing(10.25),\r\n        height: theme.spacing(10.25)\r\n    }\r\n}));\r\n\r\n// ===========================|| AVATAR ||=========================== //\r\n\r\nconst Avatar = ({ className, color, outline, size, ...others }) => {\r\n    const classes = useStyles();\r\n    let avatarClass = [];\r\n\r\n    const outlineColor = outline ? [classes[`${color}Outline`], ...avatarClass] : [classes[`${color}Background`], ...avatarClass];\r\n\r\n    avatarClass = color ? outlineColor : avatarClass;\r\n    avatarClass = size ? [classes[size], ...avatarClass] : avatarClass;\r\n    if (className) {\r\n        avatarClass = className ? [...avatarClass, className] : avatarClass;\r\n    }\r\n\r\n    return <MuiAvatar className={avatarClass.join(' ')} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@material-ui/core';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ===========================|| CARD SECONDARY ACTION ||=========================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={!title ? 'Reference' : title} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n"],"sourceRoot":""}