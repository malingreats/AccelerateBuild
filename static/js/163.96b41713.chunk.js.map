{"version":3,"sources":["views/pages/pricing/Price2.js"],"names":["useStyles","makeStyles","theme","priceTitle","fontSize","fontWeight","position","color","palette","primary","main","priceAmount","breakpoints","down","featureTitle","background","mode","default","grey","textAlign","paddingTop","paddingBottom","featureAction","borderLeft","borderColor","overflow","padding","priceBadge","secondary","display","top","right","transform","featureBlock","featureRow","borderBottom","textSuccess","success","dark","textMuted","opacity","btnToggle","width","border","borderRadius","plans","id","popular","title","price","monthly","yearly","planList","type","label","permission","PlanList","plan","view","priceFlag","classes","item","xs","sm","md","sx","className","container","spacing","gridSpacing","variant","ListItem","index","OrderButton","Price2","useTheme","React","useState","setPriceFlag","setView","direction","justifyContent","disableElevation","mb","size","bgcolor","onClick","orientation","value","exclusive","onChange","event","newView","map","content","list","Fragment","component","align"],"mappings":"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","file":"static/js/163.96b41713.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Button, ButtonGroup, Card, CardContent, Grid, Stack, ToggleButton, ToggleButtonGroup, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport CheckCircleTwoToneIcon from '@material-ui/icons/CheckCircle';\r\nimport RemoveRoundedIcon from '@material-ui/icons/RemoveRounded';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    priceTitle: {\r\n        fontSize: '20px',\r\n        fontWeight: '500',\r\n        position: 'relative',\r\n        color: theme.palette.primary.main\r\n    },\r\n    priceAmount: {\r\n        fontSize: '25px',\r\n        fontWeight: '700',\r\n        '& > span': {\r\n            fontSize: '20px',\r\n            fontWeight: '500'\r\n        },\r\n        [theme.breakpoints.down('md')]: {\r\n            fontSize: '20px',\r\n            '& > span': {\r\n                fontSize: '14px'\r\n            }\r\n        }\r\n    },\r\n    featureTitle: {\r\n        background:\r\n            theme.palette.mode === 'dark' ? `${theme.palette.background.default} !important` : `${theme.palette.grey[100]} !important`,\r\n        textAlign: 'left',\r\n        paddingTop: '12px',\r\n        paddingBottom: '12px !important'\r\n    },\r\n    featureAction: {\r\n        borderLeft: '1px solid',\r\n        borderColor:\r\n            theme.palette.mode === 'dark' ? `${theme.palette.background.default} !important` : `${theme.palette.grey[200]} !important`,\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        [theme.breakpoints.down('md')]: {\r\n            fontSize: '20px',\r\n            padding: '40px 16px'\r\n        }\r\n    },\r\n    priceBadge: {\r\n        background: theme.palette.secondary.main,\r\n        color: '#fff',\r\n        display: 'inline-block',\r\n        padding: '40px 40px 5px',\r\n        fontSize: '13px',\r\n        position: 'absolute',\r\n        top: '-24px',\r\n        right: '-55px',\r\n        transform: 'rotate(45deg)'\r\n    },\r\n    featureBlock: {\r\n        paddingTop: '12px',\r\n        paddingBottom: '12px !important'\r\n    },\r\n    featureRow: {\r\n        borderBottom: '1px solid',\r\n        borderColor:\r\n            theme.palette.mode === 'dark' ? `${theme.palette.background.default} !important` : `${theme.palette.grey[200]} !important`\r\n    },\r\n    textSuccess: {\r\n        color: theme.palette.success.dark\r\n    },\r\n    textMuted: {\r\n        opacity: '0.3'\r\n    },\r\n    btnToggle: {\r\n        width: '100%',\r\n        '& > button': {\r\n            border: 'none',\r\n            borderRadius: '5px â€‹!important'\r\n        },\r\n        '& > button.Mui-selected': {\r\n            background: `${theme.palette.background.default} !important`,\r\n            color: theme.palette.primary.main\r\n        }\r\n    }\r\n}));\r\n\r\nconst plans = [\r\n    {\r\n        id: 1,\r\n        popular: false,\r\n        title: 'Starters',\r\n        price: {\r\n            monthly: 25,\r\n            yearly: 225\r\n        }\r\n    },\r\n    {\r\n        id: 2,\r\n        popular: true,\r\n        title: 'Scalability',\r\n        price: {\r\n            monthly: 125,\r\n            yearly: 825\r\n        }\r\n    },\r\n    {\r\n        id: 3,\r\n        popular: false,\r\n        title: 'Enterprise',\r\n        price: {\r\n            monthly: 225,\r\n            yearly: 1025\r\n        }\r\n    }\r\n];\r\n\r\nconst planList = [\r\n    {\r\n        type: 'group',\r\n        label: 'Features'\r\n    },\r\n    {\r\n        type: 'list',\r\n        label: 'Only 1 User uses',\r\n        permission: [1, 1, 1]\r\n    },\r\n    {\r\n        type: 'list',\r\n        label: '10 Projects for',\r\n        permission: [0, 1, 1]\r\n    },\r\n    {\r\n        type: 'list',\r\n        label: 'Unlimited Bandwidth',\r\n        permission: [0, 0, 1]\r\n    },\r\n    {\r\n        type: 'list',\r\n        label: 'Unlimited Data',\r\n        permission: [0, 0, 1]\r\n    },\r\n    {\r\n        type: 'group',\r\n        label: 'Storage & Security'\r\n    },\r\n    {\r\n        type: 'list',\r\n        label: '5GB of Storage',\r\n        permission: [0, 1, 1]\r\n    },\r\n    {\r\n        type: 'list',\r\n        label: 'Fully Security Suite',\r\n        permission: [0, 0, 1]\r\n    }\r\n];\r\n\r\nconst PlanList = ({ plan, view, priceFlag }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid item xs={12} sm={3} md={3} sx={{ display: view !== plan.id ? { xs: 'none', sm: 'block' } : 'block' }}>\r\n            <CardContent className={classes.featureAction}>\r\n                {plan.popular && <div className={classes.priceBadge}>Popular</div>}\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h6\" className={classes.priceTitle}>\r\n                            {plan.title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"body2\" className={classes.priceAmount}>\r\n                            <sup>$</sup>\r\n                            {priceFlag === 'yearly' ? plan.price.yearly : plan.price.monthly}\r\n                            <span>/{priceFlag === 'yearly' ? 'Year' : 'Month'}</span>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nPlanList.propTypes = {\r\n    plan: PropTypes.object,\r\n    view: PropTypes.number,\r\n    priceFlag: PropTypes.string\r\n};\r\n\r\nconst ListItem = ({ item, index, view }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item xs={4} sm={3} md={3} sx={{ display: view !== index + 1 ? { xs: 'none', sm: 'block' } : 'block' }}>\r\n            {item === 1 && (\r\n                <CardContent className={classes.featureBlock}>\r\n                    <CheckCircleTwoToneIcon className={classes.textSuccess} />\r\n                </CardContent>\r\n            )}\r\n            {item === 0 && (\r\n                <CardContent className={classes.featureBlock}>\r\n                    <RemoveRoundedIcon className={classes.textMuted} />\r\n                </CardContent>\r\n            )}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nListItem.propTypes = {\r\n    item: PropTypes.number,\r\n    index: PropTypes.number,\r\n    view: PropTypes.number\r\n};\r\n\r\nconst OrderButton = ({ view, index, popular }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item xs={12} sm={3} md={3} sx={{ display: view !== index ? { xs: 'none', sm: 'block' } : 'block' }}>\r\n            <CardContent className={classes.featureAction}>\r\n                <Button variant={popular ? 'contained' : 'outlined'} color={popular ? 'secondary' : 'primary'}>\r\n                    Order Now\r\n                </Button>\r\n            </CardContent>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nOrderButton.propTypes = {\r\n    popular: PropTypes.bool,\r\n    index: PropTypes.number,\r\n    view: PropTypes.number\r\n};\r\n\r\n// =============================|| PRICING - PRICE 2 ||============================= //\r\n\r\nconst Price2 = () => {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    const [priceFlag, setPriceFlag] = React.useState('monthly');\r\n\r\n    const [view, setView] = React.useState(1);\r\n    const handleChange = (event, newView) => {\r\n        if (newView !== null) {\r\n            setView(newView);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Stack direction=\"row\" spacing={gridSpacing} justifyContent=\"center\">\r\n                <ButtonGroup disableElevation variant=\"contained\" sx={{ mb: '24px' }}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        sx={{ bgcolor: priceFlag === 'yearly' ? theme.palette.primary.main : theme.palette.primary[200] }}\r\n                        onClick={() => setPriceFlag('yearly')}\r\n                    >\r\n                        Annual\r\n                    </Button>\r\n                    <Button\r\n                        size=\"large\"\r\n                        sx={{ bgcolor: priceFlag === 'monthly' ? theme.palette.primary.main : theme.palette.primary[200] }}\r\n                        onClick={() => setPriceFlag('monthly')}\r\n                    >\r\n                        Monthly\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Stack>\r\n\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card sx={{ display: { xs: 'block', sm: 'none' } }}>\r\n                        <CardContent>\r\n                            <ToggleButtonGroup\r\n                                orientation=\"vertical\"\r\n                                value={view}\r\n                                exclusive\r\n                                onChange={handleChange}\r\n                                className={classes.btnToggle}\r\n                            >\r\n                                {plans.map((plan, index) => (\r\n                                    <ToggleButton key={index} value={plan.id}>\r\n                                        {plan.title}\r\n                                    </ToggleButton>\r\n                                ))}\r\n                            </ToggleButtonGroup>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <MainCard content={false} sx={{ textAlign: 'center' }}>\r\n                        <Grid container spacing={0}>\r\n                            <Grid item xs={12} sm={3} md={3} />\r\n                            {plans.map((plan, index) => (\r\n                                <PlanList plan={plan} view={view} priceFlag={priceFlag} key={index} />\r\n                            ))}\r\n                        </Grid>\r\n                        {planList.map((list, index) => (\r\n                            <React.Fragment key={index}>\r\n                                {list.type === 'group' && (\r\n                                    <CardContent className={classes.featureTitle}>\r\n                                        <Typography variant=\"subtitle1\">{list.label}</Typography>\r\n                                    </CardContent>\r\n                                )}\r\n                                {list.type === 'list' && (\r\n                                    <Grid container spacing={0} className={classes.featureRow}>\r\n                                        <Grid item xs={8} sm={3} md={3}>\r\n                                            <CardContent className={classes.featureBlock}>\r\n                                                <Typography component=\"div\" align=\"left\" variant=\"body2\">\r\n                                                    {list.label}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Grid>\r\n                                        {list.permission.map((item, index) => (\r\n                                            <ListItem key={index} item={item} index={index} view={view} />\r\n                                        ))}\r\n                                    </Grid>\r\n                                )}\r\n                            </React.Fragment>\r\n                        ))}\r\n                        <Grid container spacing={0}>\r\n                            <Grid item xs={12} sm={3} md={3} />\r\n                            <OrderButton view={view} index={1} />\r\n                            <OrderButton view={view} index={2} popular />\r\n                            <OrderButton view={view} index={3} />\r\n                        </Grid>\r\n                    </MainCard>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Price2;\r\n"],"sourceRoot":""}