{"version":3,"sources":["views/ui-elements/advance/UIToggleButton/ExclusiveToggleButtons.js","views/ui-elements/advance/UIToggleButton/ToggleButtonsMultiple.js","views/ui-elements/advance/UIToggleButton/StandaloneToggleButton.js","views/ui-elements/advance/UIToggleButton/ToggleButtonSizes.js","views/ui-elements/advance/UIToggleButton/VerticalToggleButtons.js","views/ui-elements/advance/UIToggleButton/ToggleButtonNotEmpty.js","views/ui-elements/advance/UIToggleButton/CustomizedDividers.js","views/ui-elements/advance/UIToggleButton/index.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js"],"names":["ExclusiveToggleButtons","React","useState","alignment","setAlignment","Grid","container","justifyContent","ToggleButtonGroup","value","exclusive","onChange","event","newAlignment","color","ToggleButton","disabled","ToggleButtonsMultiple","formats","setFormats","newFormats","StandaloneToggleButton","theme","useTheme","selected","setSelected","sx","palette","success","dark","bgcolor","light","ToggleButtonSizes","handleChange","spacing","direction","alignItems","item","size","fontSize","secondary","mode","primary","VerticalToggleButtons","view","setView","orientation","nextView","useStyles","makeStyles","toggleContainer","margin","ToggleButtonNotEmpty","classes","xs","className","length","warning","StyledToggleButtonGroup","styled","border","borderRadius","shape","CustomizedDividers","Paper","elevation","display","divider","flexWrap","Divider","flexItem","mx","my","UIToggleButton","MainCard","title","link","gridSpacing","sm","lg","SubCard","primaryBackground","background","main","paper","secondaryBackground","errorBackground","error","warningBackground","infoBackground","info","successBackground","darkBackground","greyBackground","grey","primaryOutline","secondaryOutline","errorOutline","warningOutline","infoOutline","successOutline","greyOutline","darkOutline","badge","width","height","md","xl","Avatar","outline","others","avatarClass","outlineColor","join","CardSecondaryAction","icon","placement","disableRipple","component","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","id","transform"],"mappings":"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","file":"static/js/136.c6d13808.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { Grid, ToggleButton, ToggleButtonGroup } from '@material-ui/core';\r\n\r\n// assets\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeftTwoTone';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenterTwoTone';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRightTwoTone';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustifyTwoTone';\r\n\r\n// ============================|| UI TOGGLE BUTTON - EXCLUSIVE ||============================ //\r\n\r\nexport default function ExclusiveToggleButtons() {\r\n    const [alignment, setAlignment] = React.useState('left');\r\n    const handleAlignment = (event, newAlignment) => {\r\n        setAlignment(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment} aria-label=\"text alignment\" color=\"primary\">\r\n                <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n                    <FormatAlignLeftIcon />\r\n                </ToggleButton>\r\n                <ToggleButton value=\"center\" aria-label=\"centered\">\r\n                    <FormatAlignCenterIcon />\r\n                </ToggleButton>\r\n                <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n                    <FormatAlignRightIcon />\r\n                </ToggleButton>\r\n                <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\r\n                    <FormatAlignJustifyIcon />\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { Grid, ToggleButton, ToggleButtonGroup } from '@material-ui/core';\r\n\r\n// assets\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBoldTwoTone';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalicTwoTone';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlinedTwoTone';\r\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFillTwoTone';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDownTwoTone';\r\n\r\n// ============================|| UI TOGGLE BUTTON - MULTIPLE ||============================ //\r\n\r\nexport default function ToggleButtonsMultiple() {\r\n    const [formats, setFormats] = React.useState(() => ['bold', 'italic']);\r\n    const handleFormat = (event, newFormats) => {\r\n        setFormats(newFormats);\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <ToggleButtonGroup value={formats} onChange={handleFormat} aria-label=\"text formatting\" color=\"secondary\">\r\n                <ToggleButton value=\"bold\" aria-label=\"bold\">\r\n                    <FormatBoldIcon />\r\n                </ToggleButton>\r\n                <ToggleButton value=\"italic\" aria-label=\"italic\">\r\n                    <FormatItalicIcon />\r\n                </ToggleButton>\r\n                <ToggleButton value=\"underlined\" aria-label=\"underlined\">\r\n                    <FormatUnderlinedIcon />\r\n                </ToggleButton>\r\n                <ToggleButton value=\"color\" aria-label=\"color\" disabled>\r\n                    <FormatColorFillIcon />\r\n                    <ArrowDropDownIcon />\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { Grid, ToggleButton } from '@material-ui/core';\r\n\r\n// assets\r\nimport CheckIcon from '@material-ui/icons/CheckTwoTone';\r\n\r\n// ============================|| UI TOGGLE BUTTON - STANDALONE ||============================ //\r\n\r\nexport default function StandaloneToggleButton() {\r\n    const theme = useTheme();\r\n    const [selected, setSelected] = React.useState(false);\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <ToggleButton\r\n                value=\"check\"\r\n                onChange={() => {\r\n                    setSelected(!selected);\r\n                }}\r\n                sx={{ color: theme.palette.success.dark, bgcolor: theme.palette.success.light }}\r\n            >\r\n                <CheckIcon />\r\n            </ToggleButton>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Grid, ToggleButton, ToggleButtonGroup } from '@material-ui/core';\r\n\r\n// assets\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeftTwoTone';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenterTwoTone';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRightTwoTone';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustifyTwoTone';\r\n\r\n// ============================|| UI TOGGLE BUTTON - SIZE ||============================ //\r\n\r\nexport default function ToggleButtonSizes() {\r\n    const theme = useTheme();\r\n\r\n    const [alignment, setAlignment] = React.useState('left');\r\n    const handleChange = (event, newAlignment) => {\r\n        setAlignment(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n            <Grid item>\r\n                <ToggleButtonGroup size=\"small\" value={alignment} exclusive onChange={handleChange}>\r\n                    <ToggleButton value=\"left\">\r\n                        <FormatAlignLeftIcon fontSize=\"small\" />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"center\">\r\n                        <FormatAlignCenterIcon fontSize=\"small\" />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"right\">\r\n                        <FormatAlignRightIcon fontSize=\"small\" />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"justify\">\r\n                        <FormatAlignJustifyIcon fontSize=\"small\" />\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n                <ToggleButtonGroup\r\n                    size=\"medium\"\r\n                    value={alignment}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                    color=\"secondary\"\r\n                    sx={{\r\n                        color: theme.palette.secondary.dark,\r\n                        bgcolor: theme.palette.mode === 'dark' ? 'dark.800' : theme.palette.secondary.light\r\n                    }}\r\n                >\r\n                    <ToggleButton value=\"left\">\r\n                        <FormatAlignLeftIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"center\">\r\n                        <FormatAlignCenterIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"right\">\r\n                        <FormatAlignRightIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"justify\">\r\n                        <FormatAlignJustifyIcon />\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Grid>\r\n            <Grid item>\r\n                <ToggleButtonGroup\r\n                    size=\"large\"\r\n                    value={alignment}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                    color=\"primary\"\r\n                    sx={{\r\n                        color: theme.palette.primary.dark,\r\n                        bgcolor: theme.palette.mode === 'dark' ? 'dark.800' : theme.palette.primary.light\r\n                    }}\r\n                >\r\n                    <ToggleButton value=\"left\">\r\n                        <FormatAlignLeftIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"center\">\r\n                        <FormatAlignCenterIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"right\">\r\n                        <FormatAlignRightIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"justify\">\r\n                        <FormatAlignJustifyIcon />\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { Grid, ToggleButton, ToggleButtonGroup } from '@material-ui/core';\r\n\r\n// assets\r\nimport ViewListIcon from '@material-ui/icons/ViewListTwoTone';\r\nimport ViewModuleIcon from '@material-ui/icons/ViewModuleTwoTone';\r\nimport ViewQuiltIcon from '@material-ui/icons/ViewQuiltTwoTone';\r\n\r\n// ============================|| UI TOGGLE BUTTON - VERTICAL ||============================ //\r\n\r\nexport default function VerticalToggleButtons() {\r\n    const [view, setView] = React.useState('list');\r\n    const handleChange = (event, nextView) => {\r\n        setView(nextView);\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <ToggleButtonGroup orientation=\"vertical\" value={view} exclusive onChange={handleChange}>\r\n                <ToggleButton value=\"list\" aria-label=\"list\">\r\n                    <ViewListIcon />\r\n                </ToggleButton>\r\n                <ToggleButton value=\"module\" aria-label=\"module\">\r\n                    <ViewModuleIcon />\r\n                </ToggleButton>\r\n                <ToggleButton value=\"quilt\" aria-label=\"quilt\">\r\n                    <ViewQuiltIcon />\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { Grid, ToggleButton, ToggleButtonGroup } from '@material-ui/core';\r\n\r\n// assets\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeftTwoTone';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenterTwoTone';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRightTwoTone';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustifyTwoTone';\r\nimport LaptopIcon from '@material-ui/icons/LaptopTwoTone';\r\nimport TvIcon from '@material-ui/icons/TvTwoTone';\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroidTwoTone';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    toggleContainer: {\r\n        margin: theme.spacing(2, 0)\r\n    }\r\n}));\r\n\r\n// ============================|| UI TOGGLE BUTTON - NO EMPTY ||============================ //\r\n\r\nexport default function ToggleButtonNotEmpty() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [formats, setFormats] = React.useState(() => ['phone']);\r\n    const handleFormat = (event, newFormats) => {\r\n        if (newFormats.length) {\r\n            setFormats(newFormats);\r\n        }\r\n    };\r\n\r\n    const [alignment, setAlignment] = React.useState('left');\r\n    const handleAlignment = (event, newAlignment) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n            <Grid item xs={12}>\r\n                <div className={classes.toggleContainer}>\r\n                    <ToggleButtonGroup\r\n                        value={alignment}\r\n                        exclusive\r\n                        onChange={handleAlignment}\r\n                        aria-label=\"text alignment\"\r\n                        sx={{\r\n                            color: theme.palette.success.dark,\r\n                            bgcolor: theme.palette.mode === 'dark' ? 'dark.800' : theme.palette.primary.light\r\n                        }}\r\n                    >\r\n                        <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n                            <FormatAlignLeftIcon />\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"center\" aria-label=\"centered\">\r\n                            <FormatAlignCenterIcon />\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n                            <FormatAlignRightIcon />\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\r\n                            <FormatAlignJustifyIcon />\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <div className={classes.toggleContainer}>\r\n                    <ToggleButtonGroup\r\n                        value={formats}\r\n                        onChange={handleFormat}\r\n                        aria-label=\"device\"\r\n                        sx={{\r\n                            color: theme.palette.warning.dark,\r\n                            bgcolor: theme.palette.mode === 'dark' ? 'dark.800' : theme.palette.primary.light\r\n                        }}\r\n                    >\r\n                        <ToggleButton value=\"laptop\" aria-label=\"laptop\">\r\n                            <LaptopIcon />\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"tv\" aria-label=\"tv\">\r\n                            <TvIcon />\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"phone\" aria-label=\"phone\">\r\n                            <PhoneAndroidIcon />\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import * as React from 'react';\r\n\r\n// material-ui\r\nimport { styled } from '@material-ui/styles';\r\nimport { Divider, Grid, Paper, ToggleButton, ToggleButtonGroup } from '@material-ui/core';\r\n\r\n// assets\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\r\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\n// style constant\r\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\r\n    '& .MuiToggleButtonGroup-grouped': {\r\n        margin: theme.spacing(0.5),\r\n        border: 0,\r\n        '&.Mui-disabled': {\r\n            border: 0\r\n        },\r\n        '&:not(:first-of-type)': {\r\n            borderRadius: theme.shape.borderRadius\r\n        },\r\n        '&:first-of-type': {\r\n            borderRadius: theme.shape.borderRadius\r\n        }\r\n    }\r\n}));\r\n\r\n// ============================|| UI TOGGLE BUTTON - CUSTOMIZED DIVIDERS ||============================ //\r\n\r\nexport default function CustomizedDividers() {\r\n    const [formats, setFormats] = React.useState(() => ['bold', 'italic']);\r\n    const handleFormat = (event, newFormats) => {\r\n        setFormats(newFormats);\r\n    };\r\n\r\n    const [alignment, setAlignment] = React.useState('left');\r\n    const handleAlignment = (event, newAlignment) => {\r\n        setAlignment(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\">\r\n            <Paper\r\n                elevation={0}\r\n                sx={{\r\n                    display: 'flex',\r\n                    border: (theme) => `1px solid ${theme.palette.divider}`,\r\n                    flexWrap: 'wrap'\r\n                }}\r\n            >\r\n                <StyledToggleButtonGroup\r\n                    size=\"small\"\r\n                    value={alignment}\r\n                    exclusive\r\n                    onChange={handleAlignment}\r\n                    aria-label=\"text alignment\"\r\n                    color=\"primary\"\r\n                >\r\n                    <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n                        <FormatAlignLeftIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"center\" aria-label=\"centered\">\r\n                        <FormatAlignCenterIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n                        <FormatAlignRightIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\r\n                        <FormatAlignJustifyIcon />\r\n                    </ToggleButton>\r\n                </StyledToggleButtonGroup>\r\n                <Divider flexItem orientation=\"vertical\" sx={{ mx: 0.5, my: 1 }} />\r\n                <StyledToggleButtonGroup\r\n                    size=\"small\"\r\n                    value={formats}\r\n                    onChange={handleFormat}\r\n                    aria-label=\"text formatting\"\r\n                    color=\"secondary\"\r\n                >\r\n                    <ToggleButton value=\"bold\" aria-label=\"bold\">\r\n                        <FormatBoldIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"italic\" aria-label=\"italic\">\r\n                        <FormatItalicIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"underlined\" aria-label=\"underlined\">\r\n                        <FormatUnderlinedIcon />\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"color\" aria-label=\"color\" disabled>\r\n                        <FormatColorFillIcon />\r\n                        <ArrowDropDownIcon />\r\n                    </ToggleButton>\r\n                </StyledToggleButtonGroup>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// project imports\r\nimport ExclusiveToggleButtons from './ExclusiveToggleButtons';\r\nimport ToggleButtonsMultiple from './ToggleButtonsMultiple';\r\nimport StandaloneToggleButton from './StandaloneToggleButton';\r\nimport ToggleButtonSizes from './ToggleButtonSizes';\r\nimport VerticalToggleButtons from './VerticalToggleButtons';\r\nimport ToggleButtonNotEmpty from './ToggleButtonNotEmpty';\r\nimport CustomizedDividers from './CustomizedDividers';\r\n\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ============================|| UI TOGGLE BUTTON ||============================ //\r\n\r\nconst UIToggleButton = () => (\r\n    <MainCard title=\"Toggle Button\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/toggle-button/\" />}>\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12} sm={6} lg={4}>\r\n                <SubCard title=\"Exclusive Selection\">\r\n                    <ExclusiveToggleButtons />\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} lg={4}>\r\n                <SubCard title=\"Multiple Selection\">\r\n                    <ToggleButtonsMultiple />\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} lg={4}>\r\n                <SubCard title=\"Standalone\">\r\n                    <StandaloneToggleButton />\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} lg={4}>\r\n                <SubCard title=\"Sizes\">\r\n                    <ToggleButtonSizes />\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} lg={4}>\r\n                <SubCard title=\"Enforce Value Set\">\r\n                    <ToggleButtonNotEmpty />\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} lg={4}>\r\n                <SubCard title=\"Vertical\">\r\n                    <VerticalToggleButtons />\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <SubCard title=\"Customized\">\r\n                    <CustomizedDividers />\r\n                </SubCard>\r\n            </Grid>\r\n        </Grid>\r\n    </MainCard>\r\n);\r\n\r\nexport default UIToggleButton;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport MuiAvatar from '@material-ui/core/Avatar';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    primaryBackground: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    secondaryBackground: {\r\n        background: theme.palette.secondary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    errorBackground: {\r\n        background: theme.palette.error.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    warningBackground: {\r\n        background: theme.palette.warning.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    infoBackground: {\r\n        background: theme.palette.info.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    successBackground: {\r\n        background: theme.palette.success.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    darkBackground: {\r\n        background: theme.palette.dark.dark,\r\n        color: theme.palette.dark.light\r\n    },\r\n    greyBackground: {\r\n        background: theme.palette.grey[500],\r\n        color: theme.palette.background.paper\r\n    },\r\n    primaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.primary.main,\r\n        border: `2px solid ${theme.palette.primary.main}`\r\n    },\r\n    secondaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.secondary.main,\r\n        border: `2px solid ${theme.palette.secondary.main}`\r\n    },\r\n    errorOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.error.main,\r\n        border: `2px solid ${theme.palette.error.main}`\r\n    },\r\n    warningOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.warning.dark,\r\n        border: `2px solid ${theme.palette.warning.dark}`\r\n    },\r\n    infoOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.info.main,\r\n        border: `2px solid ${theme.palette.info.main}`\r\n    },\r\n    successOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.success.dark,\r\n        border: `2px solid ${theme.palette.success.dark}`\r\n    },\r\n    greyOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.grey[500],\r\n        border: `2px solid ${theme.palette.grey[500]}`\r\n    },\r\n    darkOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.dark.dark,\r\n        border: `2px solid ${theme.palette.dark.dark}`\r\n    },\r\n    badge: {\r\n        width: theme.spacing(3.5),\r\n        height: theme.spacing(3.5)\r\n    },\r\n    xs: {\r\n        width: theme.spacing(4.25),\r\n        height: theme.spacing(4.25)\r\n    },\r\n    sm: {\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5)\r\n    },\r\n    md: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7)\r\n    },\r\n    lg: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9)\r\n    },\r\n    xl: {\r\n        width: theme.spacing(10.25),\r\n        height: theme.spacing(10.25)\r\n    }\r\n}));\r\n\r\n// ===========================|| AVATAR ||=========================== //\r\n\r\nconst Avatar = ({ className, color, outline, size, ...others }) => {\r\n    const classes = useStyles();\r\n    let avatarClass = [];\r\n\r\n    const outlineColor = outline ? [classes[`${color}Outline`], ...avatarClass] : [classes[`${color}Background`], ...avatarClass];\r\n\r\n    avatarClass = color ? outlineColor : avatarClass;\r\n    avatarClass = size ? [classes[size], ...avatarClass] : avatarClass;\r\n    if (className) {\r\n        avatarClass = className ? [...avatarClass, className] : avatarClass;\r\n    }\r\n\r\n    return <MuiAvatar className={avatarClass.join(' ')} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@material-ui/core';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ===========================|| CARD SECONDARY ACTION ||=========================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={!title ? 'Reference' : title} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n"],"sourceRoot":""}