{"version":3,"sources":["views/forms/plugins/Mask.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js"],"names":["MaskPage","title","secondary","icon","fontSize","link","container","spacing","gridSpacing","item","xs","md","alignItems","mask","className","label","guide","id","onBlur","onChange","render","ref","props","fullWidth","inputRef","defaultValue","useStyles","makeStyles","theme","primaryBackground","background","palette","primary","main","color","paper","secondaryBackground","errorBackground","error","warningBackground","warning","dark","infoBackground","info","successBackground","success","darkBackground","light","greyBackground","grey","primaryOutline","border","secondaryOutline","errorOutline","warningOutline","infoOutline","successOutline","greyOutline","darkOutline","badge","width","height","sm","lg","xl","Avatar","outline","size","others","classes","avatarClass","outlineColor","join","CardSecondaryAction","useTheme","placement","disableRipple","component","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","transform"],"mappings":"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","file":"static/js/127.b34785d8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { Grid, TextField } from '@material-ui/core';\r\n\r\n// third-party\r\nimport MaskedInput from 'react-text-mask';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\n// ===========================|| PLUGIN - MASK INPUT ||=========================== //\r\n\r\nconst MaskPage = () => (\r\n    <MainCard\r\n        title=\"Mask\"\r\n        secondary={<SecondaryAction icon={<LinkIcon fontSize=\"small\" />} link=\"https://www.npmjs.com/package/react-text-mask\" />}\r\n    >\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12} md={6}>\r\n                <SubCard title=\"Date\">\r\n                    <Grid container alignItems=\"center\" spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <MaskedInput\r\n                                mask={[/[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, '/', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\r\n                                className=\"form-control\"\r\n                                label=\"Insert Date 1\"\r\n                                guide={false}\r\n                                id=\"mask-date1\"\r\n                                onBlur={() => {}}\r\n                                onChange={() => {}}\r\n                                render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <MaskedInput\r\n                                mask={[/[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\r\n                                className=\"form-control\"\r\n                                label=\"Insert Date 1\"\r\n                                guide={false}\r\n                                id=\"mask-date2\"\r\n                                onBlur={() => {}}\r\n                                onChange={() => {}}\r\n                                render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <SubCard title=\"Time\">\r\n                    <Grid container alignItems=\"center\" spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <MaskedInput\r\n                                mask={[/[0-9]/, /[0-9]/, ':', /[0-9]/, /[0-9]/, ':', /[0-9]/, /[0-9]/]}\r\n                                className=\"form-control\"\r\n                                label=\"Hour\"\r\n                                guide={false}\r\n                                id=\"mask-hour1\"\r\n                                onBlur={() => {}}\r\n                                onChange={() => {}}\r\n                                render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    '/',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    '/',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    ' ',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    ':',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    ':',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/\r\n                                ]}\r\n                                className=\"form-control\"\r\n                                label=\"Date & Hour\"\r\n                                guide={false}\r\n                                id=\"mask-date-hour1\"\r\n                                onBlur={() => {}}\r\n                                onChange={() => {}}\r\n                                render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <SubCard title=\"Phone no.\">\r\n                    <Grid container alignItems=\"center\" spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <MaskedInput\r\n                                mask={[/[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/]}\r\n                                className=\"form-control\"\r\n                                label=\"Mobile No.\"\r\n                                guide={false}\r\n                                id=\"mask-mobile-no1\"\r\n                                onBlur={() => {}}\r\n                                onChange={() => {}}\r\n                                render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <MaskedInput\r\n                                mask={[/[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\r\n                                className=\"form-control\"\r\n                                label=\"Telephone\"\r\n                                guide={false}\r\n                                id=\"mask-telephone1\"\r\n                                onBlur={() => {}}\r\n                                onChange={() => {}}\r\n                                render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    '(',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    ')',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    '-',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/\r\n                                ]}\r\n                                className=\"form-control\"\r\n                                label=\"Tel. with Code Area\"\r\n                                guide={false}\r\n                                id=\"mask-telephone-area-code\"\r\n                                onBlur={() => {}}\r\n                                onChange={() => {}}\r\n                                render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    '(',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    ')',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    '-',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/\r\n                                ]}\r\n                                className=\"form-control\"\r\n                                label=\"US Telephone\"\r\n                                guide={false}\r\n                                id=\"mask-telephone-us\"\r\n                                onBlur={() => {}}\r\n                                onChange={() => {}}\r\n                                render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <SubCard title=\"Network\">\r\n                    <Grid container alignItems=\"center\" spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    '.',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    '.',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    '.',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/\r\n                                ]}\r\n                                className=\"form-control\"\r\n                                label=\"IP Address\"\r\n                                guide={false}\r\n                                id=\"mask-ip-address\"\r\n                                onBlur={() => {}}\r\n                                onChange={() => {}}\r\n                                render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    '.',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    '.',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    '.',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/\r\n                                ]}\r\n                                className=\"form-control\"\r\n                                label=\"IPV4\"\r\n                                guide={false}\r\n                                id=\"mask-ipv4\"\r\n                                onBlur={() => {}}\r\n                                onChange={() => {}}\r\n                                render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    ':',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    ':',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    ':',\r\n                                    /[0-9]/,\r\n                                    ':',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    ':',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    ':',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    ':',\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/,\r\n                                    /[0-9]/\r\n                                ]}\r\n                                className=\"form-control\"\r\n                                label=\"IPV6\"\r\n                                guide={false}\r\n                                id=\"mask-ipv6\"\r\n                                onBlur={() => {}}\r\n                                onChange={() => {}}\r\n                                render={(ref, props) => <TextField fullWidth inputRef={ref} {...props} defaultValue=\"\" />}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n        </Grid>\r\n    </MainCard>\r\n);\r\n\r\nexport default MaskPage;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport MuiAvatar from '@material-ui/core/Avatar';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    primaryBackground: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    secondaryBackground: {\r\n        background: theme.palette.secondary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    errorBackground: {\r\n        background: theme.palette.error.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    warningBackground: {\r\n        background: theme.palette.warning.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    infoBackground: {\r\n        background: theme.palette.info.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    successBackground: {\r\n        background: theme.palette.success.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    darkBackground: {\r\n        background: theme.palette.dark.dark,\r\n        color: theme.palette.dark.light\r\n    },\r\n    greyBackground: {\r\n        background: theme.palette.grey[500],\r\n        color: theme.palette.background.paper\r\n    },\r\n    primaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.primary.main,\r\n        border: `2px solid ${theme.palette.primary.main}`\r\n    },\r\n    secondaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.secondary.main,\r\n        border: `2px solid ${theme.palette.secondary.main}`\r\n    },\r\n    errorOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.error.main,\r\n        border: `2px solid ${theme.palette.error.main}`\r\n    },\r\n    warningOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.warning.dark,\r\n        border: `2px solid ${theme.palette.warning.dark}`\r\n    },\r\n    infoOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.info.main,\r\n        border: `2px solid ${theme.palette.info.main}`\r\n    },\r\n    successOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.success.dark,\r\n        border: `2px solid ${theme.palette.success.dark}`\r\n    },\r\n    greyOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.grey[500],\r\n        border: `2px solid ${theme.palette.grey[500]}`\r\n    },\r\n    darkOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.dark.dark,\r\n        border: `2px solid ${theme.palette.dark.dark}`\r\n    },\r\n    badge: {\r\n        width: theme.spacing(3.5),\r\n        height: theme.spacing(3.5)\r\n    },\r\n    xs: {\r\n        width: theme.spacing(4.25),\r\n        height: theme.spacing(4.25)\r\n    },\r\n    sm: {\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5)\r\n    },\r\n    md: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7)\r\n    },\r\n    lg: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9)\r\n    },\r\n    xl: {\r\n        width: theme.spacing(10.25),\r\n        height: theme.spacing(10.25)\r\n    }\r\n}));\r\n\r\n// ===========================|| AVATAR ||=========================== //\r\n\r\nconst Avatar = ({ className, color, outline, size, ...others }) => {\r\n    const classes = useStyles();\r\n    let avatarClass = [];\r\n\r\n    const outlineColor = outline ? [classes[`${color}Outline`], ...avatarClass] : [classes[`${color}Background`], ...avatarClass];\r\n\r\n    avatarClass = color ? outlineColor : avatarClass;\r\n    avatarClass = size ? [classes[size], ...avatarClass] : avatarClass;\r\n    if (className) {\r\n        avatarClass = className ? [...avatarClass, className] : avatarClass;\r\n    }\r\n\r\n    return <MuiAvatar className={avatarClass.join(' ')} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@material-ui/core';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ===========================|| CARD SECONDARY ACTION ||=========================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={!title ? 'Reference' : title} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n"],"sourceRoot":""}