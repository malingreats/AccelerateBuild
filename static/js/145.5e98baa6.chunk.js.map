{"version":3,"sources":["../node_modules/@material-ui/core/internal/svg-icons/ArrowDownward.js","../node_modules/@material-ui/core/TableSortLabel/tableSortLabelClasses.js","../node_modules/@material-ui/core/TableSortLabel/TableSortLabel.js","views/application/customer/CustomerList.js","store/customerActions.js","../node_modules/@material-ui/icons/Delete.js"],"names":["createSvgIcon","_jsx","d","getTableSortLabelUtilityClass","slot","generateUtilityClass","tableSortLabelClasses","generateUtilityClasses","_excluded","TableSortLabelRoot","styled","ButtonBase","name","overridesResolver","props","styles","ownerState","root","active","theme","cursor","display","justifyContent","flexDirection","alignItems","color","palette","text","secondary","icon","opacity","primary","TableSortLabelIcon","capitalize","direction","_extends","fontSize","marginRight","marginLeft","transition","transitions","create","duration","shorter","userSelect","transform","TableSortLabel","React","inProps","ref","useThemeProps","children","className","hideSortIcon","IconComponent","ArrowDownwardIcon","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsxs","clsx","component","disableRipple","as","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","label","align","useStyles","makeStyles","width","paper","marginBottom","spacing","table","minWidth","sortSpan","visuallyHidden","useToolbarStyles","padding","paddingLeft","paddingRight","highlight","main","title","flex","EnhancedTableHead","onSelectAllClick","numSelected","onRequestSort","rowCount","selected","TableHead","TableRow","TableCell","colSpan","length","headCell","disablePadding","sortDirection","onClick","property","event","EnhancedTableToolbar","Toolbar","Typography","variant","Tooltip","IconButton","connect","state","customer","getCustomers","type","actionTypes","rowsInitial","customers","useState","customer_x","setCustomer_x","useContext","JwtAuthContext","user","url","getData","fetch","method","response","json","profileData","console","log","useEffect","loadData","i","full_name","email","location","orders","date","time_added","phone","useTheme","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","rows","emptyRows","Math","max","MainCard","content","CardContent","TableContainer","Table","target","checked","newSelectedId","n","TableBody","slice","isItemSelected","indexOf","labelId","hover","role","tabIndex","scope","selectedIndex","newSelected","concat","handleClick","sx","mode","grey","style","height","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx"],"mappings":"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","file":"static/js/145.5e98baa6.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\r\n * @ignore - internal component.\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTableSortLabelUtilityClass(slot) {\n  return generateUtilityClass('MuiTableSortLabel', slot);\n}\nconst tableSortLabelClasses = generateUtilityClasses('MuiTableSortLabel', ['root', 'active', 'icon', 'iconDirectionDesc', 'iconDirectionAsc']);\nexport default tableSortLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"active\", \"children\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"];\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport ButtonBase from '../ButtonBase';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport tableSortLabelClasses, { getTableSortLabelUtilityClass } from './tableSortLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction,\n    active\n  } = ownerState;\n  const slots = {\n    root: ['root', active && 'active'],\n    icon: ['icon', `iconDirection${capitalize(direction)}`]\n  };\n  return composeClasses(slots, getTableSortLabelUtilityClass, classes);\n};\n\nconst TableSortLabelRoot = styled(ButtonBase, {\n  name: 'MuiTableSortLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.active && styles.active];\n  }\n})(({\n  theme\n}) => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  justifyContent: 'flex-start',\n  flexDirection: 'inherit',\n  alignItems: 'center',\n  '&:focus': {\n    color: theme.palette.text.secondary\n  },\n  '&:hover': {\n    color: theme.palette.text.secondary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 0.5\n    }\n  },\n  [`&.${tableSortLabelClasses.active}`]: {\n    color: theme.palette.text.primary,\n    [`& .${tableSortLabelClasses.icon}`]: {\n      opacity: 1,\n      color: theme.palette.text.secondary\n    }\n  }\n}));\nconst TableSortLabelIcon = styled('span', {\n  name: 'MuiTableSortLabel',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.icon, styles[`iconDirection${capitalize(ownerState.direction)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  fontSize: 18,\n  marginRight: 4,\n  marginLeft: 4,\n  opacity: 0,\n  transition: theme.transitions.create(['opacity', 'transform'], {\n    duration: theme.transitions.duration.shorter\n  }),\n  userSelect: 'none'\n}, ownerState.direction === 'desc' && {\n  transform: 'rotate(0deg)'\n}, ownerState.direction === 'asc' && {\n  transform: 'rotate(180deg)'\n}));\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nconst TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableSortLabel'\n  });\n\n  const {\n    active = false,\n    children,\n    className,\n    direction = 'asc',\n    hideSortIcon = false,\n    IconComponent = ArrowDownwardIcon\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    active,\n    direction,\n    hideSortIcon,\n    IconComponent\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(TableSortLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    component: \"span\",\n    disableRipple: true,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [children, hideSortIcon && !active ? null : /*#__PURE__*/_jsx(TableSortLabelIcon, {\n      as: IconComponent,\n      className: clsx(classes.icon),\n      ownerState: ownerState\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   * @default false\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   * @default 'asc'\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   * @default false\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   * @default ArrowDownwardIcon\n   */\n  IconComponent: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableSortLabel;","import PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\n//additions\r\nimport { connect } from 'react-redux'\r\nimport { getCustomers } from '../../../store/customerActions'\r\n//import propTypes from 'prop-types'\r\nimport { useEffect, useState, useContext } from 'react'\r\nimport JwtAuthContext from '../../../contexts/JwtAuthContext'\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport {\r\n    CardContent,\r\n    Checkbox,\r\n    Chip,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TableSortLabel,\r\n    TextField,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport { visuallyHidden } from '@material-ui/utils';\r\n\r\n// third-party\r\nimport clsx from 'clsx';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterListTwoTone';\r\nimport PrintIcon from '@material-ui/icons/PrintTwoTone';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopyTwoTone';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport VisibilityTwoToneIcon from '@material-ui/icons/VisibilityTwoTone';\r\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\r\n\r\n// table data\r\n\r\nfunction createData(name, email, location, orders, date, phone) {\r\n    return { name, email, location, orders, date, phone };\r\n} \r\n\r\n/* const rowsInitial = [\r\n    createData('Joseph William 1', 'Joseph@mail.com', 'Hong Kong, China', 263, '12.07.2018', 1),\r\n    createData('Ashy Handgun 2', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 2),\r\n    createData('Larry Doe 3', 'larry@mail.com', 'Hong Kong, China', 1120, '12.07.2018', 2),\r\n    createData('Sara Soudan 4', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 3),\r\n    createData('Joseph William 5', 'Joseph@mail.com', 'Hong Kong, China', 263, '12.07.2018', 1),\r\n    createData('Aisha Handgun 6', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 3),\r\n    createData('Larky Doe 7', 'larry@mail.com', 'Hong Kong, China', 1120, '12.07.2018', 2),\r\n    createData('Sara Soupier 8', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 1),\r\n    createData('Joseph William 9', 'Joseph@mail.com', 'Hong Kong, China', 263, '12.07.2018', 3),\r\n    createData('Anshan Handgun 10', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 1),\r\n    createData('Lardy Doe 11', 'larry@mail.com', 'Hong Kong, China', 1120, '12.07.2018', 1),\r\n    createData('Sara Soudan 12', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 3),\r\n    createData('Joseph William 13', 'Joseph@mail.com', 'Hong Kong, China', 263, '12.07.2018', 2),\r\n    createData('Ashy Handgun 14', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 2),\r\n    createData('Lars Doe 15', 'larry@mail.com', 'Hong Kong, China', 1120, '12.07.2018', 1),\r\n    createData('Sara Souvenir 16', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 2) \r\n]; */\r\n\r\n// table sort\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// table header options\r\nconst headCells = [\r\n    {\r\n        id: 'date',\r\n        numeric: true,\r\n        label: 'Registered',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'name',\r\n        numeric: false,\r\n        label: 'Customer Name',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'town',\r\n        numeric: true,\r\n        label: 'Town',\r\n        align: 'left'\r\n    },\r\n     {\r\n        id: 'phone',\r\n        numeric: true,\r\n        label: 'Phone',\r\n        align: 'left'\r\n    },\r\n    {\r\n        id: 'orders',\r\n        numeric: true,\r\n        label: 'Orders',\r\n        align: 'center'\r\n    },\r\n   \r\n];\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    table: {\r\n        minWidth: 750\r\n    },\r\n    sortSpan: visuallyHidden\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 0,\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1)\r\n    },\r\n    highlight: {\r\n        color: theme.palette.secondary.main\r\n    },\r\n    title: {\r\n        flex: '1 1 100%'\r\n    }\r\n}));\r\n\r\n// ===========================|| TABLE HEADER ||=========================== //\r\n\r\nfunction EnhancedTableHead({ classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, selected }) {\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {/* <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts'\r\n                        }}\r\n                    />\r\n                </TableCell> */}\r\n                {numSelected > 0 && (\r\n                    <TableCell padding=\"none\" colSpan={6}>\r\n                        <EnhancedTableToolbar numSelected={selected.length} />\r\n                    </TableCell>\r\n                )}\r\n                {numSelected <= 0 &&\r\n                    headCells.map((headCell) => (\r\n                        <TableCell\r\n                            key={headCell.id}\r\n                            align={headCell.align}\r\n                            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                            sortDirection={orderBy === headCell.id ? order : false}\r\n                        >\r\n                            <TableSortLabel\r\n                                active={orderBy === headCell.id}\r\n                                direction={orderBy === headCell.id ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell.id)}\r\n                            >\r\n                                {headCell.label}\r\n                                {orderBy === headCell.id ? (\r\n                                    <span className={classes.sortSpan}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                    ))}\r\n                {/* {numSelected <= 0 && (\r\n                    <TableCell sortDirection={false} align=\"center\" sx={{ pr: 3 }}>\r\n                        Action\r\n                    </TableCell>\r\n                )} */}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    selected: PropTypes.array,\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired\r\n};\r\n\r\n// ===========================|| TABLE HEADER TOOLBAR ||=========================== //\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"h4\" component=\"div\">\r\n                    {numSelected} Selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    Nutrition\r\n                </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 && (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton>\r\n                        <DeleteIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired\r\n};\r\n\r\n// ===========================|| CUSTOMER LIST ||=========================== //\r\n\r\nconst CustomerList = ({customer, props, getCustomers}) => {\r\n\r\n    //additions\r\n\r\n    const rowsInitial = []\r\n    const {customers} = customer\r\n    const [customer_x, setCustomer_x] = useState([])\r\n    const {user, url} = useContext(JwtAuthContext)\r\n\r\n    const [users, setUsers ] = useState([])\r\n\r\n\r\n    const getData = async () => {\r\n        const response = await fetch(`${url}/users/my-customers/${user.id}`, {\r\n            method: 'GET'\r\n            }\r\n        )\r\n        const profileData = await response.json()\r\n        console.log('Profile Data')\r\n        console.log(profileData)\r\n        console.log('Response')\r\n        console.log(response)\r\n\r\n        setCustomer_x(profileData)\r\n        /* console.log('Rows Initial')\r\n        console.log(rowsInitial)\r\n        console.log('Rows')\r\n        console.log(rows) */\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData()    \r\n        loadData() \r\n    }, []);\r\n\r\n    const loadData = () => {\r\n        for (let i = 0; i < customer_x.length; i++) {\r\n            rowsInitial[i] = createData(customer_x[i].full_name, customer_x[i].email, customer_x[i].location, customer_x[i].order, customer_x[i].time_added, customer_x[i].phone)\r\n            /* console.log(customer_x[i].name) */\r\n        } \r\n        console.log('Rows Initial')\r\n        console.log(rowsInitial)\r\n    }\r\n    \r\n    \r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [search, setSearch] = React.useState('');\r\n    const [rows, setRows] = React.useState(rowsInitial);\r\n\r\n    const handleSearch = (event) => {\r\n        const newString = event.target.value;\r\n        setSearch(newString);\r\n\r\n        if (newString) {\r\n            const newRows = rows.filter((row) => {\r\n                let matches = true;\r\n\r\n                const properties = ['name', 'email', 'location', 'orders'];\r\n                let containsQuery = false;\r\n\r\n                properties.forEach((property) => {\r\n                    if (row[property].toString().toLowerCase().includes(newString.toString().toLowerCase())) {\r\n                        containsQuery = true;\r\n                    }\r\n                });\r\n\r\n                if (!containsQuery) {\r\n                    matches = false;\r\n                }\r\n                return matches;\r\n            });\r\n            setRows(newRows);\r\n        } else {\r\n            setRows(rowsInitial);\r\n        }\r\n    };\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelectedId = rows.map((n) => n.name);\r\n            setSelected(newSelectedId);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    return (\r\n        <MainCard title=\"Customer List\" content={false}>\r\n            <CardContent>\r\n                {/* <Grid container justifyContent=\"space-between\" alignItems=\"center\" spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon fontSize=\"small\" />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                            onChange={handleSearch}\r\n                            placeholder=\"Search Customer\"\r\n                            value={search}\r\n                            size=\"small\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\r\n                        <Tooltip title=\"Copy\">\r\n                            <IconButton>\r\n                                <FileCopyIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Print\">\r\n                            <IconButton>\r\n                                <PrintIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Filter\">\r\n                            <IconButton>\r\n                                <FilterListIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </Grid> */}\r\n            </CardContent>\r\n\r\n            {/* table */}\r\n            <TableContainer>\r\n                <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n                    <EnhancedTableHead\r\n                        classes={classes}\r\n                        numSelected={selected.length}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onSelectAllClick={handleSelectAllClick}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={rows.length}\r\n                        selected={selected}\r\n                    />\r\n                    <TableBody>\r\n                        {stableSort(customer_x, getComparator(order, orderBy))\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((customer, index) => {\r\n                                const isItemSelected = isSelected(customer.name);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                \r\n\r\n                                const getUser = async () => {\r\n                                    var requestOptions = {\r\n                                      method: 'GET',\r\n                                      redirect: 'follow'\r\n                                    };\r\n\r\n                                const res = await fetch(`http://localhost:8000/users/retrieve-user/${customer.id}`, requestOptions)\r\n                                const data = await res.json()\r\n                                setUsers(data)\r\n                                console.log(res)\r\n                                }\r\n\r\n                                return (\r\n                                    <TableRow\r\n                                        hover\r\n                                        role=\"checkbox\"\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={index}\r\n                                        selected={isItemSelected}\r\n                                    >\r\n                                        {/* <TableCell padding=\"checkbox\" sx={{ pl: 3 }} onClick={(event) => handleClick(event, customer.name)}>\r\n                                            <Checkbox\r\n                                                color=\"primary\"\r\n                                                checked={isItemSelected}\r\n                                                inputProps={{\r\n                                                    'aria-labelledby': labelId\r\n                                                }}\r\n                                            />\r\n                                        </TableCell> */}\r\n                                        <TableCell align=\"left\">{customer.time_added}</TableCell>\r\n                                        <TableCell\r\n                                            component=\"th\"\r\n                                            id={labelId}\r\n                                            scope=\"customer\"\r\n                                            onClick={(event) => handleClick(event, customer.full_name)}\r\n                                            sx={{ cursor: 'pointer' }}\r\n                                        >\r\n                                            <Typography\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : 'grey.900' }}\r\n                                            >\r\n                                                {' '}\r\n                                                {customer.full_name}{' '}\r\n                                            </Typography>\r\n                                            <Typography variant=\"caption\"> {customer.email} </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell>{customer.location}</TableCell>\r\n                                        \r\n                                        <TableCell align=\"left\">\r\n                                            {customer.phone}\r\n                                            {/* {customer.status === 1 && <Chip label=\"Complete\" size=\"small\" color=\"success\" />}\r\n                                            {customer.status === 2 && <Chip label=\"Processing\" size=\"small\" color=\"warning\" />}\r\n                                            {customer.status === 3 && <Chip label=\"Confirm\" size=\"small\" color=\"primary\" />} */}\r\n                                        </TableCell>\r\n                                         <TableCell align=\"center\">{customer.orders}</TableCell>\r\n                                        {/* {user.is_staff && \r\n                                        <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                                            <IconButton color=\"primary\">\r\n                                                <VisibilityTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                                            </IconButton>\r\n                                            <IconButton color=\"secondary\">\r\n                                                <EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                        } */}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        {emptyRows > 0 && (\r\n                            <TableRow\r\n                                style={{\r\n                                    height: 53 * emptyRows\r\n                                }}\r\n                            >\r\n                                <TableCell colSpan={6} />\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {/* table pagination */}\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\n\r\nCustomerList.propTypes = {\r\n    getCustomers: PropTypes.func.isRequired,\r\n    customer: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n         customer: state.customer\r\n    }\r\n}\r\n       \r\n\r\nexport default connect(mapStateToProps, { getCustomers })(CustomerList);\r\n","import * as actionTypes from './actions';\r\n\r\nexport const getCustomers = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.GET_CUSTOMERS\r\n\t};\r\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"sourceRoot":""}