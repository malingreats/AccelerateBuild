{"version":3,"sources":["views/pages/authentication/firebase-forms/FirebaseRegister.js","views/pages/authentication/authentication3/Register3.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","hooks/useScriptRef.js","../node_modules/@material-ui/styles/styled/styled.js","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/icons/VisibilityOff.js","ui-component/cards/AuthFooter.js","../node_modules/@material-ui/core/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/Checkbox/checkboxClasses.js","../node_modules/@material-ui/core/Checkbox/Checkbox.js","assets/images/ring-loader.svg","utils/password-strength.js","assets/images/icons/social-google.svg"],"names":["useStyles","makeStyles","theme","redButton","fontSize","fontWeight","backgroundColor","palette","mode","dark","main","grey","border","borderColor","light","color","textTransform","primary","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","loginIcon","marginRight","loginInput","typography","customInput","FirebaseRegister","others","useAuth","registerUser","isLoading","classes","useScriptRef","useMediaQuery","useSelector","state","customization","React","useState","showPassword","setShowPassword","setStrength","setLevel","handleClickShowPassword","firebaseEmailPasswordSignIn","firebaseGoogleSignIn","handleMouseDownPassword","event","preventDefault","useEffect","value","temp","strengthIndicator","strengthColor","changePassword","container","direction","justifyContent","item","xs","sx","alignItems","display","className","orientation","mb","validationSchema","Yup","shape","email","max","required","password","errors","handleBlur","isSubmitting","handleChange","handleSubmit","touched","values","noValidate","onSubmit","fullWidth","htmlFor","id","type","name","onBlur","inputProps","notchedOutline","label","endAdornment","position","onClick","onMouseDown","edge","md","style","marginLeft","control","mt","disabled","size","variant","src","loader","alt","height","width","Register","useTheme","matchDownSM","minHeight","m","sm","to","secondary","gutterBottom","textAlign","component","RouterLink","textDecoration","card","maxWidth","flexBasis","content","AuthCardWrapper","children","other","contentClass","AuthWrapper1","styled","background","default","scripted","useRef","current","_excluded","_excluded2","omit","input","fields","output","Object","keys","forEach","prop","indexOf","Component","options","stylesOptions","_objectWithoutPropertiesLoose","filterProps","classNamePrefix","stylesOrCreator","root","props","_extends","displayName","propTypes","StyledComponent","ref","classNameProp","clone","ComponentProp","clsx","spread","FinalComponent","_jsx","hoistNonReactStatics","_interopRequireDefault","require","defineProperty","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","AuthFooter","underline","createSvgIcon","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","CheckboxRoot","SwitchBase","shouldForwardProp","rootShouldForwardProp","overridesResolver","styles","ownerState","indeterminate","capitalize","text","disableRipple","alpha","action","active","hoverOpacity","checked","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","slots","composedClasses","composeClasses","useUtilityClasses","count","errorMain","warningDark","orangeMain","successMain","successDark","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed"],"mappings":"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","file":"static/js/51.aa6f726d.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@material-ui/core';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\nimport loader from 'assets/images/ring-loader.svg';\r\n\r\n// project imports\r\nimport useAuth from 'hooks/useAuth';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport Google from 'assets/images/icons/social-google.svg';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor:\r\n            theme.palette.mode === 'dark' ? `${theme.palette.dark.light + 20} !important` : `${theme.palette.grey[100]} !important`,\r\n        color: `${theme.palette.grey[900]} !important`,\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n// ===========================|| FIREBASE - REGISTER ||=========================== //\r\n\r\nconst FirebaseRegister = ({ ...others }) => {\r\n\r\n    const { registerUser, isLoading } = useAuth(); \r\n\r\n\r\n    const classes = useStyles();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n    const customization = useSelector((state) => state.customization);\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const [strength, setStrength] = React.useState(0);\r\n    const [level, setLevel] = React.useState('');\r\n\r\n    const { firebaseEmailPasswordSignIn, firebaseGoogleSignIn } = useAuth();\r\n\r\n    const googleHandler = async () => {\r\n        try {\r\n            await firebaseGoogleSignIn();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                {/* <Grid item xs={12}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            disableElevation\r\n                            fullWidth\r\n                            className={classes.redButton}\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            <img src={Google} alt=\"google\" width=\"20px\" sx={{ mr: { xs: 1, sm: 2 } }} className={classes.loginIcon} /> Sign\r\n                            up with Google\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </Grid> */}\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex'\r\n                        }}\r\n                    >\r\n                        {/* <Divider className={classes.signDivider} orientation=\"horizontal\" />\r\n                        <AnimateButton>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                className={classes.signText}\r\n                                sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n                                disableRipple\r\n                                disabled\r\n                            >\r\n                                OR\r\n                            </Button>\r\n                        </AnimateButton> */}\r\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box\r\n                        sx={{\r\n                            mb: 2\r\n                        }}\r\n                    >\r\n                        {/* <Typography variant=\"subtitle1\">Sign up with Email address</Typography> */}\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                /* initialValues={{\r\n                    email: 'info@codedthemes.com',\r\n                    password: '123456',\r\n                    submit: null\r\n                }} */\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                /* onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        await firebaseEmailPasswordSignIn(values.email, values.password);\r\n\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }} */\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={registerUser} {...others}>\r\n                        {/* <Grid container spacing={matchDownSM ? 0 : 2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Full Name\"\r\n                                    margin=\"normal\"\r\n                                    /* name=\"fname\" \r\n                                    name=\"full_name\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"Joseph\"\r\n                                    className={classes.loginInput}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"User Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"username\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"Doe\"\r\n                                    className={classes.loginInput}\r\n                                />\r\n                            </Grid>\r\n                        </Grid> */}\r\n\r\n\r\n                        <FormControl fullWidth  className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-register\"\r\n                                type=\"text\"\r\n                                /* value={values.email} */\r\n                                name=\"username\"\r\n                                onBlur={handleBlur}\r\n                                /* onChange={handleChange} */\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </FormControl>\r\n\r\n\r\n                        <FormControl fullWidth /* error={Boolean(touched.email && errors.email)} */ className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-register\"\r\n                                type=\"email\"\r\n                                /* value={values.email} */\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                /* onChange={handleChange} */\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {/* {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {' '}\r\n                                    {errors.email}{' '}\r\n                                </FormHelperText>\r\n                            )} */}\r\n                        </FormControl>\r\n\r\n                        <FormControl fullWidth /* error={Boolean(touched.password && errors.password)} */ className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                /* value={values.password} */\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                onBlur={handleBlur}\r\n                                /* onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }} */\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            /> \r\n                            {/* {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {' '}\r\n                                    {errors.password}{' '}\r\n                                </FormHelperText>\r\n                            )} */}\r\n                        </FormControl>\r\n\r\n                        {/* {strength !== 0 && (\r\n                            <FormControl fullWidth>\r\n                                <Box\r\n                                    sx={{\r\n                                        mb: 2\r\n                                    }}\r\n                                >\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Box\r\n                                                backgroundColor={level.color}\r\n                                                sx={{\r\n                                                    width: 85,\r\n                                                    height: 8,\r\n                                                    borderRadius: '7px'\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                                {level.label}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </FormControl>\r\n                        )} */}\r\n\r\n\r\n\r\n                         <FormControl fullWidth /* error={Boolean(touched.password && errors.password)} */ className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                /* value={values.password} */\r\n                                name=\"password2\"\r\n                                label=\"Repeat Password\"\r\n                                onBlur={handleBlur}\r\n                                /* onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }} */\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {/* {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {' '}\r\n                                    {errors.password}{' '}\r\n                                </FormHelperText>\r\n                            )} */}\r\n                        </FormControl>\r\n\r\n\r\n                        <FormControl fullWidth>\r\n                            <Grid item xs={12} md={12} style={{marginLeft: '45px'}}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <FormControlLabel control={<Checkbox name=\"customer\"/>} label=\"Customer\" />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <FormControlLabel control={<Checkbox name=\"vendor\"/>} label=\"Vendor\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </FormControl>\r\n\r\n\r\n                        \r\n                        {/* <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"checked\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Agree with &nbsp;\r\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                Terms & Condition.\r\n                                            </Typography>\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n\r\n\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"vendor\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Vendor\r\n                                            {/* <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                Terms & Condition.\r\n                                            </Typography> \r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n\r\n\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"customer\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Customer\r\n                                            {/* <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                Terms & Condition.\r\n                                            </Typography> \r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )} */}\r\n\r\n\r\n\r\n                        <Box\r\n                            sx={{\r\n                                mt: 2\r\n                            }}\r\n                        >\r\n                            <AnimateButton>\r\n                            {isLoading ? <Button color=\"secondary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">Signing Up    <img src={loader} alt=\"\" style={{height: '40px', width: '40px'}}/> </Button>:<Button color=\"secondary\" disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\">\r\n                                Sign Up\r\n                            </Button>} \r\n                        </AnimateButton> \r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseRegister;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport FirebaseRegister from '../firebase-forms/FirebaseRegister';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\n\r\n// assets\r\n\r\n// ===============================|| AUTH3 - REGISTER ||=============================== //\r\n\r\nconst Register = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <RouterLink to=\"#\">\r\n                                            <Logo />\r\n                                        </RouterLink>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Sign up\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <FirebaseRegister />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={RouterLink}\r\n                                                to=\"/pages/login/login3\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: '475px',\r\n        '& > *': {\r\n            flexGrow: 1,\r\n            flexBasis: '50%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px'\r\n        },\r\n        [theme.breakpoints.down('lg')]: {\r\n            maxWidth: '400px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: `${theme.spacing(5)} !important`,\r\n        [theme.breakpoints.down('lg')]: {\r\n            padding: `${theme.spacing(3)} !important`\r\n        }\r\n    }\r\n}));\r\n\r\n// ===========================|| AUTHENTICATION CARD WRAPPER ||=========================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n            {children}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@material-ui/styles';\r\n\r\n// ===========================|| AUTHENTICATION 1 WRAPPER ||=========================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ===========================|| ELEMENT REFERENCE HOOKS  ||=========================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"name\"],\n      _excluded2 = [\"children\", \"className\", \"clone\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from '../makeStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction omit(input, fields) {\n  const output = {};\n  Object.keys(input).forEach(prop => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n} // styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\n\n\nexport default function styled(Component) {\n  const componentCreator = (style, options = {}) => {\n    const {\n      name\n    } = options,\n          stylesOptions = _objectWithoutPropertiesLoose(options, _excluded);\n\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n\n    let classNamePrefix = name;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        const displayName = getDisplayName(Component);\n\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n\n    const stylesOrCreator = typeof style === 'function' ? theme => ({\n      root: props => style(_extends({\n        theme\n      }, props))\n    }) : {\n      root: style\n    };\n    const useStyles = makeStyles(stylesOrCreator, _extends({\n      Component,\n      name: name || Component.displayName,\n      classNamePrefix\n    }, stylesOptions));\n    let filterProps;\n    let propTypes = {};\n\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n    /* eslint-disable react/forbid-foreign-prop-types */\n\n\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n\n    const StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\n      const {\n        children,\n        className: classNameProp,\n        clone,\n        component: ComponentProp\n      } = props,\n            other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n      const classes = useStyles(props);\n      const className = clsx(classes.root, classNameProp);\n      let spread = other;\n\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n\n      if (clone) {\n        return /*#__PURE__*/React.cloneElement(children, _extends({\n          className: clsx(children.props.className, className)\n        }, spread));\n      }\n\n      if (typeof children === 'function') {\n        return children(_extends({\n          className\n        }, spread));\n      }\n\n      const FinalComponent = ComponentProp || Component;\n      return /*#__PURE__*/_jsx(FinalComponent, _extends({\n        ref: ref,\n        className: className\n      }, spread, {\n        children: children\n      }));\n    });\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = _extends({\n      /**\n       * A render function or node.\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n      /**\n       * @ignore\n       */\n      className: PropTypes.string,\n\n      /**\n       * If `true`, the component will recycle it's children HTML element.\n       * It's using `React.cloneElement` internally.\n       *\n       * This prop will be deprecated and removed in v5\n       */\n      clone: chainPropTypes(PropTypes.bool, props => {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n\n        return null;\n      }),\n\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: PropTypes\n      /* @typescript-to-proptypes-ignore */\n      .elementType\n    }, propTypes) : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = `Styled(${classNamePrefix})`;\n    }\n\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n\n  return componentCreator;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import React from 'react';\r\n\r\n// material-ui\r\nimport { Link, Typography, Stack } from '@material-ui/core';\r\n\r\n// ===========================|| FOOTER - AUTHENTICATION 2 & 3 ||=========================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" /* component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" */ underline=\"hover\">\r\n            &copy; store.thegoodmarket.io\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" /* component={Link} href=\"https://codedthemes.com\" target=\"_blank\" */ underline=\"hover\">\r\n            {/* &copy; thegoodshop.org */}\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\r\n * @ignore - internal component.\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\r\n * @ignore - internal component.\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\r\n * @ignore - internal component.\r\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'succes', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","export default __webpack_public_path__ + \"static/media/ring-loader.c2459cc9.svg\";","/**\r\n * Password validator for login pages\r\n */\r\n\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\r\n\r\n// has special chars\r\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n    return false;\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (number) => {\r\n    let strengths = 0;\r\n    if (number.length > 5) strengths += 1;\r\n    if (number.length > 7) strengths += 1;\r\n    if (hasNumber(number)) strengths += 1;\r\n    if (hasSpecial(number)) strengths += 1;\r\n    if (hasMixed(number)) strengths += 1;\r\n    return strengths;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/social-google.a57081bd.svg\";"],"sourceRoot":""}