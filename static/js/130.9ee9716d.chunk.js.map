{"version":3,"sources":["views/forms/tables/TableCollapsible.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js"],"names":["useRowStyles","makeStyles","root","borderBottom","createData","name","calories","fat","carbs","protein","price","history","date","customerId","amount","Row","props","theme","useTheme","row","React","useState","open","setOpen","classes","hover","className","sx","pl","size","onClick","component","scope","align","pr","style","paddingBottom","paddingTop","colSpan","in","timeout","unmountOnExit","margin","bgcolor","palette","mode","grey","mb","title","content","map","historyRow","Math","round","rows","TableCollapsible","secondary","link","useStyles","primaryBackground","background","primary","main","color","paper","secondaryBackground","errorBackground","error","warningBackground","warning","dark","infoBackground","info","successBackground","success","darkBackground","light","greyBackground","primaryOutline","border","secondaryOutline","errorOutline","warningOutline","infoOutline","successOutline","greyOutline","darkOutline","badge","width","spacing","height","xs","sm","md","lg","xl","Avatar","outline","others","avatarClass","outlineColor","join","CardSecondaryAction","icon","placement","disableRipple","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","id","transform"],"mappings":"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","file":"static/js/130.9ee9716d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { Box, Collapse, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\n\r\n// assets\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\n// style constant\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset'\r\n        }\r\n    }\r\n});\r\n\r\n// table data\r\nfunction createData(name, calories, fat, carbs, protein, price) {\r\n    return {\r\n        name,\r\n        calories,\r\n        fat,\r\n        carbs,\r\n        protein,\r\n        price,\r\n        history: [\r\n            { date: '2020-01-05', customerId: '11091700', amount: 3 },\r\n            { date: '2020-01-02', customerId: 'Anonymous', amount: 1 }\r\n        ]\r\n    };\r\n}\r\n\r\nfunction Row(props) {\r\n    const theme = useTheme();\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n\r\n    return (\r\n        <>\r\n            <TableRow hover className={classes.root}>\r\n                <TableCell sx={{ pl: 3 }}>\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\" sx={{ pr: 3 }}>\r\n                    {row.protein}\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box\r\n                            sx={{\r\n                                margin: 1\r\n                            }}\r\n                        >\r\n                            <TableContainer>\r\n                                <SubCard\r\n                                    sx={{ bgcolor: theme.palette.mode === 'dark' ? 'dark.800' : theme.palette.grey[50], mb: 2 }}\r\n                                    title=\"History\"\r\n                                    content={false}\r\n                                >\r\n                                    <Table size=\"small\" aria-label=\"purchases\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>Date</TableCell>\r\n                                                <TableCell>Customer</TableCell>\r\n                                                <TableCell align=\"right\">Amount</TableCell>\r\n                                                <TableCell align=\"right\">Total price ($)</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {row.history.map((historyRow) => (\r\n                                                <TableRow hover key={historyRow.date}>\r\n                                                    <TableCell component=\"th\" scope=\"row\">\r\n                                                        {historyRow.date}\r\n                                                    </TableCell>\r\n                                                    <TableCell>{historyRow.customerId}</TableCell>\r\n                                                    <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                                                    <TableCell align=\"right\">\r\n                                                        {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </SubCard>\r\n                            </TableContainer>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </>\r\n    );\r\n}\r\n\r\nRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        calories: PropTypes.number.isRequired,\r\n        carbs: PropTypes.number.isRequired,\r\n        fat: PropTypes.number.isRequired,\r\n        history: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                amount: PropTypes.number.isRequired,\r\n                customerId: PropTypes.string.isRequired,\r\n                date: PropTypes.string.isRequired\r\n            })\r\n        ).isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        price: PropTypes.number.isRequired,\r\n        protein: PropTypes.number.isRequired\r\n    }).isRequired\r\n};\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n    createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5)\r\n];\r\n\r\n// ===========================|| TABLE - COLLAPSIBLE ||=========================== //\r\n\r\nexport default function TableCollapsible() {\r\n    return (\r\n        <MainCard\r\n            content={false}\r\n            title=\"Collapsible Table\"\r\n            secondary={<SecondaryAction link=\"https://next.material-ui.com/components/tables/\" />}\r\n        >\r\n            {/* table */}\r\n            <TableContainer>\r\n                <Table aria-label=\"collapsible table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell sx={{ pl: 3 }} />\r\n                            <TableCell>Dessert (100g serving)</TableCell>\r\n                            <TableCell align=\"right\">Calories</TableCell>\r\n                            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                            <TableCell sx={{ pr: 3 }} align=\"right\">\r\n                                Protein&nbsp;(g)\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <Row key={row.name} row={row} />\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </MainCard>\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport MuiAvatar from '@material-ui/core/Avatar';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    primaryBackground: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    secondaryBackground: {\r\n        background: theme.palette.secondary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    errorBackground: {\r\n        background: theme.palette.error.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    warningBackground: {\r\n        background: theme.palette.warning.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    infoBackground: {\r\n        background: theme.palette.info.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    successBackground: {\r\n        background: theme.palette.success.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    darkBackground: {\r\n        background: theme.palette.dark.dark,\r\n        color: theme.palette.dark.light\r\n    },\r\n    greyBackground: {\r\n        background: theme.palette.grey[500],\r\n        color: theme.palette.background.paper\r\n    },\r\n    primaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.primary.main,\r\n        border: `2px solid ${theme.palette.primary.main}`\r\n    },\r\n    secondaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.secondary.main,\r\n        border: `2px solid ${theme.palette.secondary.main}`\r\n    },\r\n    errorOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.error.main,\r\n        border: `2px solid ${theme.palette.error.main}`\r\n    },\r\n    warningOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.warning.dark,\r\n        border: `2px solid ${theme.palette.warning.dark}`\r\n    },\r\n    infoOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.info.main,\r\n        border: `2px solid ${theme.palette.info.main}`\r\n    },\r\n    successOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.success.dark,\r\n        border: `2px solid ${theme.palette.success.dark}`\r\n    },\r\n    greyOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.grey[500],\r\n        border: `2px solid ${theme.palette.grey[500]}`\r\n    },\r\n    darkOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.dark.dark,\r\n        border: `2px solid ${theme.palette.dark.dark}`\r\n    },\r\n    badge: {\r\n        width: theme.spacing(3.5),\r\n        height: theme.spacing(3.5)\r\n    },\r\n    xs: {\r\n        width: theme.spacing(4.25),\r\n        height: theme.spacing(4.25)\r\n    },\r\n    sm: {\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5)\r\n    },\r\n    md: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7)\r\n    },\r\n    lg: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9)\r\n    },\r\n    xl: {\r\n        width: theme.spacing(10.25),\r\n        height: theme.spacing(10.25)\r\n    }\r\n}));\r\n\r\n// ===========================|| AVATAR ||=========================== //\r\n\r\nconst Avatar = ({ className, color, outline, size, ...others }) => {\r\n    const classes = useStyles();\r\n    let avatarClass = [];\r\n\r\n    const outlineColor = outline ? [classes[`${color}Outline`], ...avatarClass] : [classes[`${color}Background`], ...avatarClass];\r\n\r\n    avatarClass = color ? outlineColor : avatarClass;\r\n    avatarClass = size ? [classes[size], ...avatarClass] : avatarClass;\r\n    if (className) {\r\n        avatarClass = className ? [...avatarClass, className] : avatarClass;\r\n    }\r\n\r\n    return <MuiAvatar className={avatarClass.join(' ')} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@material-ui/core';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ===========================|| CARD SECONDARY ACTION ||=========================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={!title ? 'Reference' : title} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n"],"sourceRoot":""}