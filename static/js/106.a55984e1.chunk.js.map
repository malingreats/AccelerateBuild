{"version":3,"sources":["ui-component/cards/Skeleton/PopularCard.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","assets/images/icons/earning.svg","views/dashboard/Default/EarningCard.js","views/dashboard/Default/chart-data/bajaj-area-chart.js","views/dashboard/Default/BajajAreaChartCard.js","views/dashboard/Default/PopularCard.js","views/dashboard/Default/TotalOrderLineChartCard.js","views/dashboard/Default/TotalIncomeDarkCard.js","views/dashboard/Default/TotalIncomeLightCard.js","views/dashboard/Default/chart-data/total-growth-bar-chart.js","views/dashboard/Default/TotalGrowthBarChart.js","views/dashboard/Default/index.js","ui-component/cards/Skeleton/EarningCard.js","ui-component/cards/Skeleton/TotalIncomeCard.js"],"names":["useStyles","makeStyles","cardAction","padding","display","paddingTop","justifyContent","PopularCard","classes","container","spacing","gridSpacing","item","xs","alignItems","zeroMinWidth","variant","height","width","className","TotalGrowthBarChart","theme","card","backgroundColor","palette","mode","dark","secondary","color","overflow","position","content","background","borderRadius","top","right","breakpoints","down","opacity","avatar","typography","commonAvatar","largeAvatar","main","marginTop","avatarRight","mediumAvatar","zIndex","cardHeading","fontSize","fontWeight","marginRight","marginBottom","subHeading","text","avatarCircle","cursor","smallAvatar","circleIcon","transform","menuItem","chartData","type","options","chart","id","sparkline","enabled","dataLabels","stroke","curve","tooltip","fixed","x","show","y","title","marker","series","data","light","contentContainer","paddingBottom","fontStyle","BajajAreaChartCard","total","useTheme","navType","useSelector","state","customization","useAuth","user","url","useState","store","setStore","orangeDark","React","useEffect","newSupportChart","colors","ApexCharts","exec","setData","getData","a","requestOptions","method","redirect","fetch","res","json","dta","console","log","chartData2","name","Card","CardContent","Grid","Typography","sx","grey","sdg_goals","primaryLight","primary","divider","avatarSuccess","success","marginLeft","successDark","avatarError","orange","errorDark","isLoading","navigate","useNavigate","order","setOrder","getVendorOrder","response","map","od","purchase_amount","quantity","MainCard","alignContent","pt","length","direction","products","Avatar","payer_name","Divider","sucessDark","CardActions","Button","onClick","size","disableElevation","warning","stacked","toolbar","zoom","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","horizontal","columnWidth","xaxis","categories","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","vertical","fill","grid","darkLight","grey200","primary200","primaryDark","secondaryMain","secondaryLight","grey500","newChartData","style","yaxis","borderColor","loadSalesData","Dashboard","setLoading","md","EarningCard","TotalIncomeCard","disableGutters"],"mappings":"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","file":"static/js/106.a55984e1.chunk.js","sourcesContent":["import React from 'react';\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Skeleton } from '@material-ui/core';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// style constant\r\nconst useStyles = makeStyles({\r\n    cardAction: {\r\n        padding: '10px',\r\n        display: 'flex',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    }\r\n});\r\n\r\n// ===========================|| SKELETON - POPULAR CARD ||=========================== //\r\n\r\nconst PopularCard = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                            <Grid item xs zeroMinWidth>\r\n                                <Skeleton variant=\"rect\" height={20} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Skeleton variant=\"rect\" height={20} width={20} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Skeleton variant=\"rect\" height={150} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Skeleton variant=\"rect\" height={20} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Skeleton variant=\"rect\" height={20} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Skeleton variant=\"rect\" height={20} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Skeleton variant=\"rect\" height={20} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                    <Grid item xs={6}>\r\n                                        <Skeleton variant=\"rect\" height={20} />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                            <Grid item xs zeroMinWidth>\r\n                                                <Skeleton variant=\"rect\" height={20} />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Skeleton variant=\"rect\" height={20} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <CardContent className={classes.cardAction}>\r\n                <Skeleton variant=\"rect\" height={25} width={75} />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PopularCard;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { Card, CardContent, Grid } from '@material-ui/core';\r\nimport Skeleton from '@material-ui/core/Skeleton';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ===========================|| SKELETON TOTAL GROWTH BAR CHART ||=========================== //\r\n\r\nconst TotalGrowthBarChart = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                    <Skeleton variant=\"text\" />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Skeleton variant=\"rect\" height={20} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rect\" height={50} width={80} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rect\" height={530} />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default TotalGrowthBarChart;\r\n","export default __webpack_public_path__ + \"static/media/earning.00f461a5.svg\";","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\n// assets\r\nimport EarningIcon from 'assets/images/icons/earning.svg';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport GetAppTwoToneIcon from '@material-ui/icons/GetAppOutlined';\r\nimport FileCopyTwoToneIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport PictureAsPdfTwoToneIcon from '@material-ui/icons/PictureAsPdfOutlined';\r\nimport ArchiveTwoToneIcon from '@material-ui/icons/ArchiveOutlined';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.secondary.dark,\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background:\r\n                theme.palette.mode === 'dark'\r\n                    ? `linear-gradient(210.04deg, ${theme.palette.secondary.dark} -50.94%, rgba(144, 202, 249, 0) 95.49%)`\r\n                    : theme.palette.secondary[800],\r\n            borderRadius: '50%',\r\n            top: '-85px',\r\n            right: '-95px',\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-105px',\r\n                right: '-140px'\r\n            }\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background:\r\n                theme.palette.mode === 'dark'\r\n                    ? `linear-gradient(140.9deg, ${theme.palette.secondary.dark} -14.02%, rgba(144, 202, 249, 0) 85.50%)`\r\n                    : theme.palette.secondary[800],\r\n            borderRadius: '50%',\r\n            top: '-125px',\r\n            right: '-15px',\r\n            opacity: 0.5,\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-155px',\r\n                right: '-70px'\r\n            }\r\n        }\r\n    },\r\n    content: {\r\n        padding: '20px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.secondary[800],\r\n        marginTop: '8px'\r\n    },\r\n    avatarRight: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.mediumAvatar,\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.secondary.dark,\r\n        color: theme.palette.secondary[200],\r\n        zIndex: 1\r\n    },\r\n    cardHeading: {\r\n        fontSize: '2.125rem',\r\n        fontWeight: 500,\r\n        marginRight: '8px',\r\n        marginTop: '14px',\r\n        marginBottom: '6px'\r\n    },\r\n    subHeading: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        color: theme.palette.mode === 'dark' ? theme.palette.text.secondary : theme.palette.secondary[200]\r\n    },\r\n    avatarCircle: {\r\n        cursor: 'pointer',\r\n        ...theme.typography.smallAvatar,\r\n        backgroundColor: theme.palette.secondary[200],\r\n        color: theme.palette.secondary.dark\r\n    },\r\n    circleIcon: {\r\n        transform: 'rotate3d(1, 1, 1, 45deg)'\r\n    },\r\n    menuItem: {\r\n        marginRight: '14px',\r\n        fontSize: '1.25rem'\r\n    }\r\n}));\r\n\r\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\r\n\r\nconst EarningCard = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonEarningCard />\r\n            ) : (\r\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Grid container justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Avatar variant=\"rounded\" className={classes.avatar}>\r\n                                        <img src={EarningIcon} alt=\"Notification\" />\r\n                                    </Avatar>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Avatar\r\n                                        variant=\"rounded\"\r\n                                        className={classes.avatarRight}\r\n                                        aria-controls=\"menu-earning-card\"\r\n                                        aria-haspopup=\"true\"\r\n                                        onClick={handleClick}\r\n                                    >\r\n                                        <MoreHorizIcon fontSize=\"inherit\" />\r\n                                    </Avatar>\r\n                                    <Menu\r\n                                        id=\"menu-earning-card\"\r\n                                        anchorEl={anchorEl}\r\n                                        keepMounted\r\n                                        open={Boolean(anchorEl)}\r\n                                        onClose={handleClose}\r\n                                        variant=\"selectedMenu\"\r\n                                        anchorOrigin={{\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'right'\r\n                                        }}\r\n                                        transformOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right'\r\n                                        }}\r\n                                    >\r\n                                        <MenuItem onClick={handleClose}>\r\n                                            <GetAppTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Import Card\r\n                                        </MenuItem>\r\n                                        <MenuItem onClick={handleClose}>\r\n                                            <FileCopyTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Copy Data\r\n                                        </MenuItem>\r\n                                        <MenuItem onClick={handleClose}>\r\n                                            <PictureAsPdfTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Export\r\n                                        </MenuItem>\r\n                                        <MenuItem onClick={handleClose}>\r\n                                            <ArchiveTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Archive File\r\n                                        </MenuItem>\r\n                                    </Menu>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <Typography className={classes.cardHeading}>$500.00</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Avatar className={classes.avatarCircle}>\r\n                                        <ArrowUpwardIcon fontSize=\"inherit\" className={classes.circleIcon} />\r\n                                    </Avatar>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item sx={{ mb: 1.25 }}>\r\n                            <Typography className={classes.subHeading}>Total Earning</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nEarningCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default EarningCard;\r\n","// ===========================|| DASHBOARD - BAJAJ AREA CHART ||=========================== //\r\n\r\nconst chartData = {\r\n    type: 'area',\r\n    height: 95,\r\n    options: {\r\n        chart: {\r\n            id: 'support-chart',\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        stroke: {\r\n            curve: 'smooth',\r\n            width: 1\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: 'Ticket '\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [\r\n        {\r\n            data: [0, 15, 10, 50, 30, 40, 25, 100, 80, 70, 10, 5]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default chartData;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\n\r\n// third-party\r\nimport ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport chartData from './chart-data/bajaj-area-chart';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: theme.palette.secondary.light\r\n    },\r\n    content: {\r\n        padding: '0px !important'\r\n    },\r\n    contentContainer: {\r\n        padding: '16px',\r\n        paddingBottom: 0,\r\n        color: '#fff'\r\n    },\r\n    fontStyle: {\r\n        fontWeight: 400\r\n    }\r\n}));\r\n\r\n// ===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||=========================== //\r\n\r\nconst BajajAreaChartCard = ({total}) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n    const { navType } = customization;\r\n\r\n    const { user,url } = useAuth();\r\n    const [store, setStore] = useState([])\r\n\r\n    const orangeDark = theme.palette.secondary[800];\r\n\r\n    React.useEffect(() => {\r\n        const newSupportChart = {\r\n            ...chartData.options,\r\n            colors: [orangeDark],\r\n            tooltip: {\r\n                theme: navType === 'dark' ? 'dark' : 'light'\r\n            }\r\n        };\r\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\r\n    }, [navType, orangeDark]);\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    const getData = async() => {\r\n        var requestOptions = {\r\n          method: 'GET',\r\n          redirect: 'follow'\r\n        };\r\n\r\n        const res = await fetch(`${url}/api/popular-card/${user.id}`, requestOptions)\r\n        const dta = await res.json()\r\n        console.log('Popular Data', dta)\r\n        setData(dta)\r\n\r\n        }\r\n\r\n\r\n    useEffect( async () => {\r\n        getData()\r\n        var requestOptions = {\r\n          method: 'GET',\r\n          redirect: 'follow'\r\n        };\r\n\r\n        const res = await fetch(`${url}/api/single-store/${user.id}`, requestOptions)\r\n        const data = await res.json()\r\n        setStore(data)\r\n            }, [])\r\n\r\n\r\n\r\n    const arr = [0, 15, 10, 50, 30, 40, 25, 100, 100, 100, 100, 5]\r\n\r\n    \r\n    const chartData2 = {...chartData, series:[{name: 'Weekly Profit', data: data}]}\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent className={classes.content}>\r\n                <Grid container className={classes.contentContainer}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <Typography variant=\"subtitle1\" sx={{ color: theme.palette.secondary.dark }}>\r\n                                    {store.name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"h4\" sx={{ color: theme.palette.grey[800] }}>\r\n                                   $ {total}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.grey[800] }}>\r\n                            {store.sdg_goals}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Chart {...chartData2} />  \r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default BajajAreaChartCard;\r\n","import PropTypes from 'prop-types';\r\nimport React, {useEffect} from 'react';\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\r\n\r\n\r\nimport useAuth from 'hooks/useAuth';\r\n\r\n// project imports\r\nimport BajajAreaChartCard from './BajajAreaChartCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\r\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\r\nimport KeyboardArrowUpOutlinedIcon from '@material-ui/icons/KeyboardArrowUpOutlined';\r\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardAction: {\r\n        padding: '10px',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    },\r\n    primaryLight: {\r\n        color: theme.palette.primary[200],\r\n        cursor: 'pointer'\r\n    },\r\n    divider: {\r\n        marginTop: '12px',\r\n        marginBottom: '12px'\r\n    },\r\n    avatarSuccess: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.success.light,\r\n        color: theme.palette.success.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    successDark: {\r\n        color: theme.palette.success.dark\r\n    },\r\n    avatarError: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.orange.light,\r\n        color: theme.palette.orange.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    errorDark: {\r\n        color: theme.palette.orange.dark\r\n    }\r\n}));\r\n\r\n// ===========================|| DASHBOARD DEFAULT - POPULAR CARD ||=========================== //\r\n\r\nconst PopularCard = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [order, setOrder] = React.useState([]);\r\n    const { user, url } = useAuth();\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const getVendorOrder = async (id) => {\r\n    var requestOptions = {\r\n      method: 'GET',\r\n      redirect: 'follow'\r\n    };\r\n\r\n    const response = await fetch(`${url}/api/dash-vendor-order/?payee_name=${user.id}`, requestOptions)\r\n      /* .then(response => response.json())\r\n      .then(result => console.log(result))\r\n      .catch(error => console.log('error', error)); */\r\n    const data = await response.json()\r\n    console.log(data)\r\n    setOrder(data)\r\n\r\n  }\r\n  useEffect(() => {\r\n    getVendorOrder()\r\n  }, [])\r\n\r\n  let total = 0.0\r\n  order.map((od) => total+=od.purchase_amount * od.quantity)\r\n  console.log(\"TOTAL\", total)\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonPopularCard />\r\n            ) : (\r\n                <MainCard content={false}>\r\n                    <CardContent>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h4\">Current Orders</Typography>\r\n                                    </Grid>\r\n                                    {/* <Grid item>\r\n                                        <MoreHorizOutlinedIcon\r\n                                            fontSize=\"small\"\r\n                                            className={classes.primaryLight}\r\n                                            aria-controls=\"menu-popular-card\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleClick}\r\n                                        />\r\n                                        <Menu\r\n                                            id=\"menu-popular-card\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem onClick={handleClose}> Today</MenuItem>\r\n                                            <MenuItem onClick={handleClose}> This Month</MenuItem>\r\n                                            <MenuItem onClick={handleClose}> This Year </MenuItem>\r\n                                        </Menu>\r\n                                    </Grid> */}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sx={{ pt: '16px !important' }}>\r\n                                <BajajAreaChartCard total={total}/>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n\r\n                                {order.length > 0 ? \r\n                                    <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    {order[0].products}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            {order[0].purchase_amount}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\r\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\r\n                                            {order[0].payer_name}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                :\"\"}\r\n                                <Divider className={classes.divider} />\r\n                                {order.length > 1 ? \r\n                                    <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    {order[1].products}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            {order[1].purchase_amount}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\r\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" className={classes.sucessDark}>\r\n                                            {order[1].payer_name}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>:\"\"}\r\n                                <Divider className={classes.divider} />\r\n                                {order.length > 2 ? \r\n                                    <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    {order[2].products}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            {order[2].purchase_amount}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\r\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\r\n                                            {order[2].payer_name}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>:\"\"}\r\n                                <Divider className={classes.divider} />\r\n                                {order.length > 3 ? \r\n                                    <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    {order[3].products}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            {order[3].purchase_amount}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\r\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\r\n                                            {order[3].payer_name}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>:\"\"}\r\n                                <Divider className={classes.divider} />\r\n                                {order.length > 4 ? \r\n                                    <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    {order[4].products}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                           {order[4].purchase_amount}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\r\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\r\n                                            {order[4].payer_name}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>:\"\"}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <CardActions className={classes.cardAction}>\r\n                        <Button onClick={()=> navigate('/customer/order-list')} size=\"small\" disableElevation>\r\n                            View All\r\n                            <ChevronRightOutlinedIcon />\r\n                        </Button>\r\n                    </CardActions>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nPopularCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default PopularCard;\r\n","import PropTypes from 'prop-types';\r\nimport React, {useState, useEffect} from 'react';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Button, Grid, Typography } from '@material-ui/core';\r\n\r\n// third-party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\r\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\r\n\r\n// assets\r\nimport LocalMallOutlinedIcon from '@material-ui/icons/LocalMallOutlined';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.primary.dark,\r\n        color: '#fff',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&>div': {\r\n            position: 'relative',\r\n            zIndex: 5\r\n        },\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background:\r\n                theme.palette.mode === 'dark'\r\n                    ? `linear-gradient(210.04deg, ${theme.palette.primary.dark} -50.94%, rgba(144, 202, 249, 0) 95.49%)`\r\n                    : theme.palette.primary[800],\r\n            borderRadius: '50%',\r\n            zIndex: 1,\r\n            top: '-85px',\r\n            right: '-95px',\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-105px',\r\n                right: '-140px'\r\n            }\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            zIndex: 1,\r\n            width: '210px',\r\n            height: '210px',\r\n            background:\r\n                theme.palette.mode === 'dark'\r\n                    ? `linear-gradient(140.9deg, ${theme.palette.primary.dark} -14.02%, rgba(144, 202, 249, 0) 82.50%)`\r\n                    : theme.palette.primary[800],\r\n            borderRadius: '50%',\r\n            top: '-125px',\r\n            right: '-15px',\r\n            opacity: 0.5,\r\n            [theme.breakpoints.down('xs')]: {\r\n                top: '-155px',\r\n                right: '-70px'\r\n            }\r\n        }\r\n    },\r\n    content: {\r\n        padding: '20px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.primary[800],\r\n        color: '#fff',\r\n        marginTop: '8px'\r\n    },\r\n    cardHeading: {\r\n        fontSize: '2.125rem',\r\n        fontWeight: 500,\r\n        marginRight: '8px',\r\n        marginTop: '14px',\r\n        marginBottom: '6px'\r\n    },\r\n    subHeading: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        color: theme.palette.mode === 'dark' ? theme.palette.text.secondary : theme.palette.primary[200]\r\n    },\r\n    avatarCircle: {\r\n        ...theme.typography.smallAvatar,\r\n        cursor: 'pointer',\r\n        backgroundColor: theme.palette.primary[200],\r\n        color: theme.palette.primary.dark\r\n    },\r\n    circleIcon: {\r\n        transform: 'rotate3d(1, 1, 1, 45deg)'\r\n    }\r\n}));\r\n\r\n// ===========================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||=========================== //\r\n\r\nconst TotalOrderLineChartCard = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n\r\n    const [timeValue, setTimeValue] = React.useState(false);\r\n    const handleChangeTime = (event, newValue) => {\r\n        setTimeValue(newValue);\r\n    };\r\n\r\n    const { user } = useAuth();\r\n    const [total, setTotal] = useState(0)\r\n\r\n\r\n    const getVendorOrder = async (id) => {\r\n        var requestOptions = {\r\n          method: 'GET',\r\n          headers: {'Content-Type':'application/json'},\r\n          redirect: 'follow'\r\n        };\r\n        const res = await fetch(`http://localhost:8000/api/vendor-order/?payee_name=${user.id}`, requestOptions)\r\n\r\n            console.log('RES')\r\n            console.log(res)\r\n            const data = await res.json()\r\n\r\n            console.log('DATA')\r\n            console.log(data)\r\n            /* setTotal(data) */\r\n            setTotal(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getVendorOrder()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalOrderCard />\r\n            ) : (\r\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Grid container justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Avatar variant=\"rounded\" className={classes.avatar}>\r\n                                        <LocalMallOutlinedIcon fontSize=\"inherit\" />\r\n                                    </Avatar>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button\r\n                                        disableElevation\r\n                                        variant={timeValue ? 'contained' : 'string'}\r\n                                        size=\"small\"\r\n                                        onClick={(e) => handleChangeTime(e, true)}\r\n                                    >\r\n                                        Month\r\n                                    </Button>\r\n                                    <Button\r\n                                        disableElevation\r\n                                        variant={!timeValue ? 'contained' : 'string'}\r\n                                        size=\"small\"\r\n                                        onClick={(e) => handleChangeTime(e, false)}\r\n                                    >\r\n                                        Year\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item sx={{ mb: 0.75 }}>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            {/* {timeValue ? (\r\n                                                <Typography className={classes.cardHeading}>$108</Typography>\r\n                                            ) : (\r\n                                                <Typography className={classes.cardHeading}>$961</Typography>\r\n                                            )} */}\r\n                                            <Typography className={classes.cardHeading}>$ {total}</Typography>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Avatar className={classes.avatarCircle}>\r\n                                                <ArrowDownwardIcon fontSize=\"inherit\" className={classes.circleIcon} />\r\n                                            </Avatar>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <Typography className={classes.subHeading}>Total Order</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalOrderLineChartCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalOrderLineChartCard;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\r\n\r\n// assets\r\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.primary.light,\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: `linear-gradient(210.04deg, ${theme.palette.primary[200]} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\r\n            borderRadius: '50%',\r\n            top: '-30px',\r\n            right: '-180px'\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: `linear-gradient(140.9deg, ${theme.palette.primary[200]} -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\r\n            borderRadius: '50%',\r\n            top: '-160px',\r\n            right: '-130px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: '16px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.primary[800],\r\n        color: '#fff'\r\n    },\r\n    primary: {\r\n        color: '#fff'\r\n    },\r\n    secondary: {\r\n        color: theme.palette.primary.light,\r\n        marginTop: '5px'\r\n    },\r\n    padding: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    }\r\n}));\r\n\r\n// ===========================|| DASHBOARD - TOTAL INCOME DARK CARD ||=========================== //\r\n\r\nconst TotalIncomeDarkCard = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <TotalIncomeCard />\r\n            ) : (\r\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\r\n                    <List className={classes.padding}>\r\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\r\n                            <ListItemAvatar>\r\n                                <Avatar variant=\"rounded\" className={classes.avatar}>\r\n                                    <TableChartOutlinedIcon fontSize=\"inherit\" />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                className={classes.padding}\r\n                                sx={{\r\n                                    mt: 0.45,\r\n                                    mb: 0.45\r\n                                }}\r\n                                primary={\r\n                                    <Typography variant=\"h4\" className={classes.primary}>\r\n                                        $203k\r\n                                    </Typography>\r\n                                }\r\n                                secondary={\r\n                                    <Typography variant=\"subtitle2\" className={classes.secondary}>\r\n                                        Total Income\r\n                                    </Typography>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalIncomeDarkCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalIncomeDarkCard;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\r\n\r\n// assets\r\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\r\n            borderRadius: '50%',\r\n            top: '-30px',\r\n            right: '-180px'\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\r\n            borderRadius: '50%',\r\n            top: '-160px',\r\n            right: '-130px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: '16px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.warning.light,\r\n        color: theme.palette.mode === 'dark' ? theme.palette.warning.dark : theme.palette.warning.dark\r\n    },\r\n    secondary: {\r\n        color: theme.palette.grey[500],\r\n        marginTop: '5px'\r\n    },\r\n    padding: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    }\r\n}));\r\n\r\n// ===========================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||=========================== //\r\n\r\nconst TotalIncomeLightCard = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <TotalIncomeCard />\r\n            ) : (\r\n                <MainCard className={classes.card} contentClass={classes.content}>\r\n                    <List className={classes.padding}>\r\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\r\n                            <ListItemAvatar>\r\n                                <Avatar variant=\"rounded\" className={classes.avatar}>\r\n                                    <StorefrontTwoToneIcon fontSize=\"inherit\" />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                sx={{\r\n                                    mt: 0.45,\r\n                                    mb: 0.45\r\n                                }}\r\n                                className={classes.padding}\r\n                                primary={<Typography variant=\"h4\">$203k</Typography>}\r\n                                secondary={\r\n                                    <Typography variant=\"subtitle2\" className={classes.secondary}>\r\n                                        Total Income\r\n                                    </Typography>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalIncomeLightCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalIncomeLightCard;\r\n","// ===========================|| DASHBOARD - TOTAL GROWTH BAR CHART ||=========================== //\r\n/* const January = 1\r\nconst February = 2\r\nconst March = 3\r\nconst April = 4\r\nconst May = 5\r\nconst June = 6\r\nconst July = 7\r\nconst August = 8\r\nconst September = 9\r\nconst October = 10\r\nconst November = 11\r\nconst December = 12\r\n\r\n\r\nlet total = 0\r\nlet temp = 0\r\nlet data = [1,2,3,4,5,6,7,8,9,10,11,12]\r\n\r\nsetTimeout(async function () {\r\n\r\n    let requestOptions = {\r\n              method: 'GET',\r\n              redirect: 'follow'\r\n            };\r\n\r\n            const response = await fetch(\"http://localhost:8000/api/chartbar-data/\", requestOptions)\r\n            const res = await response.json()\r\n            console.log(\"SALES ORDER RES\",res[11])\r\n            let data = res\r\n\r\n            console.log(\"lOADED DATA\", data)\r\n\r\n    \r\n        \r\n\r\n    \r\n}, 100) */\r\n\r\n\r\n\r\nconst chartData = {\r\n    height: 480,\r\n    type: 'bar',\r\n    options: {\r\n        chart: {\r\n            id: 'bar-chart',\r\n            stacked: true,\r\n            toolbar: {\r\n                show: true\r\n            },\r\n            zoom: {\r\n                enabled: true\r\n            }\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 480,\r\n                options: {\r\n                    legend: {\r\n                        position: 'bottom',\r\n                        offsetX: -10,\r\n                        offsetY: 0\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n                columnWidth: '50%'\r\n            }\r\n        },\r\n        xaxis: {\r\n            type: 'category',\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n        },\r\n        legend: {\r\n            show: true,\r\n            fontSize: '14px',\r\n            fontFamily: `'Roboto', sans-serif`,\r\n            position: 'bottom',\r\n            offsetX: 20,\r\n            labels: {\r\n                useSeriesColors: false\r\n            },\r\n            markers: {\r\n                width: 16,\r\n                height: 16,\r\n                radius: 5\r\n            },\r\n            itemMargin: {\r\n                horizontal: 15,\r\n                vertical: 8\r\n            }\r\n        },\r\n        fill: {\r\n            type: 'solid'\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        grid: {\r\n            show: true\r\n        }\r\n    },\r\n    series: [\r\n        /* {\r\n            name: 'Investment',\r\n            data: [35, 125, 35, 35, 35, 80, 35, 20, 35, 45, 15, 75]\r\n        }, */\r\n        /* {\r\n            name: 'Loss',\r\n            data: [35, 15, 15, 35, 65, 40, 80, 25, 15, 85, 25, 75]\r\n        }, */\r\n        {\r\n            name: 'Profit',\r\n            data: [35, 15, 15, 35, 65, 40, 80, 25, 15, 85, 25, 75]\r\n        },\r\n        /* {\r\n            name: 'Maintenance',\r\n            data: [0, 0, 75, 0, 0, 115, 0, 0, 0, 0, 150, 0]\r\n        } */\r\n    ]\r\n};\r\nexport default chartData;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useAuth from 'hooks/useAuth'\r\n\r\n// material-ui\r\nimport { Grid, MenuItem, TextField, Typography, useTheme } from '@material-ui/core';\r\n\r\n// third-party\r\nimport ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// chart data\r\nimport chartData from './chart-data/total-growth-bar-chart';\r\n\r\nconst status = [\r\n    {\r\n        value: 'today',\r\n        label: 'Today'\r\n    },\r\n    {\r\n        value: 'month',\r\n        label: 'This Month'\r\n    },\r\n    {\r\n        value: 'year',\r\n        label: 'This Year'\r\n    }\r\n];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ===========================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||=========================== //\r\n\r\nconst TotalGrowthBarChart = ({ isLoading }) => {\r\n    const [value, setValue] = React.useState('today');\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const { user, url } = useAuth()\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n\r\n    const primary200 = theme.palette.primary[200];\r\n    const primaryDark = theme.palette.primary.dark;\r\n    const secondaryMain = theme.palette.secondary.main;\r\n    const secondaryLight = theme.palette.secondary.light;\r\n    const grey500 = theme.palette.grey[500];\r\n\r\n    React.useEffect(() => {\r\n        const newChartData = {\r\n            ...chartData.options,\r\n            colors: [primary200, primaryDark, secondaryMain, secondaryLight],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: navType === 'dark' ? darkLight + 20 : grey200\r\n            },\r\n            tooltip: {\r\n                theme: navType === 'dark' ? 'dark' : 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: grey500\r\n                }\r\n            }\r\n        };\r\n\r\n        // do not load chart when loading\r\n        if (!isLoading) {\r\n            ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\r\n        }\r\n    }, [navType, primary200, primaryDark, secondaryMain, secondaryLight, primary, darkLight, grey200, isLoading, grey500]);\r\n\r\n        let total = 0\r\n        let temp = 0\r\n        \r\n\r\n        const [data, setData] = useState([])\r\n\r\n\r\n        const loadSalesData = async() => {\r\n            let requestOptions = {\r\n              method: 'GET',\r\n              redirect: 'follow'\r\n            };\r\n\r\n            const response = await fetch(`${url}/api/chartbar-data/${user.id}`, requestOptions)\r\n            const res = await response.json()\r\n            console.log(\"SALES RESPONSE\", res)\r\n            setData(res) \r\n        }\r\n\r\n        console.log(\"SALES ORDER DATA\",data)\r\n        /* console.log('graph data')\r\n        console.log(data) */\r\n\r\n\r\n        const chartData2 = {...chartData, series:[{name: 'Profit', data: data}]}\r\n\r\n\r\n\r\n\r\n    useEffect( async() => {\r\n        loadSalesData()\r\n\r\n        /* for (var i = 0; i < data.length; i++) {\r\n                total += data[i]\r\n            } */\r\n\r\n            /* console.log(\"TOTAL\", total) */\r\n\r\n\r\n        \r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalGrowthBarChart />\r\n            ) : (\r\n                <MainCard>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Grid container direction=\"column\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"h3\">Total Sales Monthly</Typography>\r\n                                        </Grid>\r\n                                        {/* <Grid item>\r\n                                            <Typography variant=\"h3\">${total}</Typography>\r\n                                        </Grid> */}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {/* <Grid item>\r\n                                    <TextField\r\n                                        id=\"standard-select-currency\"\r\n                                        select\r\n                                        value={value}\r\n                                        /* onChange={(e) => setValue(e.target.value)} \r\n                                    >\r\n                                        {status.map((option) => (\r\n                                            <MenuItem key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}} \r\n                                    </TextField>\r\n                                </Grid> */}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Chart {...chartData2} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalGrowthBarChart.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalGrowthBarChart;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// project imports\r\nimport EarningCard from './EarningCard';\r\nimport PopularCard from './PopularCard';\r\nimport TotalOrderLineChartCard from './TotalOrderLineChartCard';\r\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\r\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\r\nimport TotalGrowthBarChart from './TotalGrowthBarChart';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ===========================|| DEFAULT DASHBOARD ||=========================== //\r\n\r\nconst Dashboard = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            {/* <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                        <EarningCard isLoading={isLoading} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                        <TotalOrderLineChartCard isLoading={isLoading} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={12} sm={12} xs={12}>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                                <TotalIncomeDarkCard isLoading={isLoading} />\r\n                            </Grid>\r\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                                <TotalIncomeLightCard isLoading={isLoading} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid> */}\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12} md={8}>\r\n                        <TotalGrowthBarChart isLoading={isLoading} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <PopularCard isLoading={isLoading} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Skeleton } from '@material-ui/core';\r\n\r\n// style constant\r\nconst useStyles = makeStyles({\r\n    cardHeading: {\r\n        marginRight: '8px',\r\n        marginTop: '18px',\r\n        marginBottom: '14px'\r\n    }\r\n});\r\n\r\n// ===========================|| SKELETON EARNING CARD ||=========================== //\r\n\r\nconst EarningCard = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item>\r\n                        <Grid container justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <Skeleton variant=\"rect\" width={44} height={44} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Skeleton variant=\"rect\" width={34} height={34} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Skeleton variant=\"rect\" className={classes.cardHeading} height={40} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Skeleton variant=\"rect\" height={30} />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default EarningCard;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@material-ui/core';\r\n\r\n// style constant\r\nconst useStyles = makeStyles({\r\n    content: {\r\n        padding: '16px !important'\r\n    },\r\n    padding: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    }\r\n});\r\n\r\n// ===========================|| SKELETON - TOTAL INCOME DARK/LIGHT Card ||=========================== //\r\n\r\nconst TotalIncomeCard = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card>\r\n            <CardContent className={classes.content}>\r\n                <List className={classes.padding}>\r\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\r\n                        <ListItemAvatar>\r\n                            <Skeleton variant=\"rect\" width={44} height={44} />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            className={classes.padding}\r\n                            primary={<Skeleton variant=\"rect\" height={20} />}\r\n                            secondary={<Skeleton variant=\"text\" />}\r\n                        />\r\n                    </ListItem>\r\n                </List>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TotalIncomeCard;\r\n"],"sourceRoot":""}