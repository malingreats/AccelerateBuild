{"version":3,"sources":["views/forms/tables/TablesCustomized.js","ui-component/extended/Avatar.js","ui-component/cards/CardSecondaryAction.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","createData","name","calories","fat","carbs","protein","rows","useStyles","makeStyles","table","minWidth","CustomizedTables","classes","content","title","secondary","link","className","sx","pl","align","pr","map","row","component","scope","primaryBackground","background","primary","main","paper","secondaryBackground","errorBackground","error","warningBackground","warning","dark","infoBackground","info","successBackground","success","darkBackground","light","greyBackground","grey","primaryOutline","border","secondaryOutline","errorOutline","warningOutline","infoOutline","successOutline","greyOutline","darkOutline","badge","width","spacing","height","xs","sm","md","lg","xl","Avatar","outline","size","others","avatarClass","outlineColor","join","CardSecondaryAction","icon","useTheme","placement","disableRipple","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","id","transform"],"mappings":"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","file":"static/js/132.5ccf2855.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles, withStyles } from '@material-ui/styles';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\n\r\n// style constant\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: `${theme.palette.common.white} !important`\r\n    },\r\n    body: {\r\n        fontSize: 14\r\n    }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    }\r\n}))(TableRow);\r\n\r\n// table data\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9)\r\n];\r\n\r\n// style constant\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 320\r\n    }\r\n});\r\n\r\n// ===========================|| TABLE - CUSTOMIZED ||=========================== //\r\n\r\nexport default function CustomizedTables() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard\r\n            content={false}\r\n            title=\"Customized Tables\"\r\n            secondary={<SecondaryAction link=\"https://next.material-ui.com/components/tables/\" />}\r\n        >\r\n            <TableContainer>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell sx={{ pl: 3 }}>Dessert (100g serving)</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Calories</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Fat&nbsp;(g)</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell>\r\n                            <StyledTableCell sx={{ pr: 3 }} align=\"right\">\r\n                                Protein&nbsp;(g)\r\n                            </StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <StyledTableRow hover key={row.name}>\r\n                                <StyledTableCell sx={{ pl: 3 }} component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.calories}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.fat}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell>\r\n                                <StyledTableCell sx={{ pr: 3 }} align=\"right\">\r\n                                    {row.protein}\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </MainCard>\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport MuiAvatar from '@material-ui/core/Avatar';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    primaryBackground: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    secondaryBackground: {\r\n        background: theme.palette.secondary.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    errorBackground: {\r\n        background: theme.palette.error.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    warningBackground: {\r\n        background: theme.palette.warning.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    infoBackground: {\r\n        background: theme.palette.info.main,\r\n        color: theme.palette.background.paper\r\n    },\r\n    successBackground: {\r\n        background: theme.palette.success.dark,\r\n        color: theme.palette.background.paper\r\n    },\r\n    darkBackground: {\r\n        background: theme.palette.dark.dark,\r\n        color: theme.palette.dark.light\r\n    },\r\n    greyBackground: {\r\n        background: theme.palette.grey[500],\r\n        color: theme.palette.background.paper\r\n    },\r\n    primaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.primary.main,\r\n        border: `2px solid ${theme.palette.primary.main}`\r\n    },\r\n    secondaryOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.secondary.main,\r\n        border: `2px solid ${theme.palette.secondary.main}`\r\n    },\r\n    errorOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.error.main,\r\n        border: `2px solid ${theme.palette.error.main}`\r\n    },\r\n    warningOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.warning.dark,\r\n        border: `2px solid ${theme.palette.warning.dark}`\r\n    },\r\n    infoOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.info.main,\r\n        border: `2px solid ${theme.palette.info.main}`\r\n    },\r\n    successOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.success.dark,\r\n        border: `2px solid ${theme.palette.success.dark}`\r\n    },\r\n    greyOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.grey[500],\r\n        border: `2px solid ${theme.palette.grey[500]}`\r\n    },\r\n    darkOutline: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.dark.dark,\r\n        border: `2px solid ${theme.palette.dark.dark}`\r\n    },\r\n    badge: {\r\n        width: theme.spacing(3.5),\r\n        height: theme.spacing(3.5)\r\n    },\r\n    xs: {\r\n        width: theme.spacing(4.25),\r\n        height: theme.spacing(4.25)\r\n    },\r\n    sm: {\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5)\r\n    },\r\n    md: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7)\r\n    },\r\n    lg: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(9)\r\n    },\r\n    xl: {\r\n        width: theme.spacing(10.25),\r\n        height: theme.spacing(10.25)\r\n    }\r\n}));\r\n\r\n// ===========================|| AVATAR ||=========================== //\r\n\r\nconst Avatar = ({ className, color, outline, size, ...others }) => {\r\n    const classes = useStyles();\r\n    let avatarClass = [];\r\n\r\n    const outlineColor = outline ? [classes[`${color}Outline`], ...avatarClass] : [classes[`${color}Background`], ...avatarClass];\r\n\r\n    avatarClass = color ? outlineColor : avatarClass;\r\n    avatarClass = size ? [classes[size], ...avatarClass] : avatarClass;\r\n    if (className) {\r\n        avatarClass = className ? [...avatarClass, className] : avatarClass;\r\n    }\r\n\r\n    return <MuiAvatar className={avatarClass.join(' ')} {...others} />;\r\n};\r\n\r\nAvatar.propTypes = {\r\n    className: PropTypes.string,\r\n    color: PropTypes.string,\r\n    outline: PropTypes.bool,\r\n    size: PropTypes.string\r\n};\r\n\r\nexport default Avatar;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@material-ui/core';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ===========================|| CARD SECONDARY ACTION ||=========================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={!title ? 'Reference' : title} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n"],"sourceRoot":""}